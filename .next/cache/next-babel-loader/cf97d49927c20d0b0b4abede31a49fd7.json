{"ast":null,"code":"import { createStyled } from '@stitches/react';\nexport const theme = {\n  breakpoints: ['575px', '750px', '1000px', '1200px'],\n  colors: {\n    $black: 'rgba(19, 19, 21, 1)',\n    $white: 'rgba(255, 255, 255, 1)',\n    $gray: 'rgba(128, 128, 128, 1)',\n    $blue: 'rgba(3, 136, 252, 1)',\n    $red: 'rgba(249, 16, 74, 1)',\n    $yellow: 'rgba(255, 221, 0, 1)',\n    $pink: 'rgba(232, 141, 163, 1)',\n    $turq: 'rgba(0, 245, 196, 1)',\n    $orange: 'rgba(255, 135, 31, 1)'\n  },\n  fonts: {\n    $sans: 'Inter,sans-serif',\n    $mono: 'Fira Mono,monospace'\n  },\n  fontSizes: {\n    $1: '12px',\n    $2: '14px',\n    $3: '16px',\n    $4: '20px',\n    $5: '24px',\n    $6: '32px',\n    $7: '48px',\n    $8: '64px',\n    $9: '72px'\n  },\n  space: {\n    $1: '4px',\n    $2: '8px',\n    $3: '16px',\n    $4: '32px',\n    $5: '64px',\n    $6: '128px',\n    $7: '256px',\n    $8: '512px'\n  },\n  sizes: {\n    $1: '4px',\n    $2: '8px',\n    $3: '16px',\n    $4: '32px',\n    $5: '64px',\n    $6: '128px',\n    $7: '256px',\n    $8: '512px'\n  },\n  radii: {\n    '1': '2px',\n    '2': '4px',\n    '3': '8px'\n  },\n  opacity: {\n    '1': '10%',\n    '2': '30%',\n    '3': '50%',\n    '4': '70%',\n    '5': '90%',\n    '6': '100%'\n  }\n};\nexport const darkTheme = {\n  $hiContrast: 'hsl(206,2%,93%)',\n  $loContrast: 'hsl(206,8%,8%)',\n  $canvas: 'hsl(0,0%,15%)',\n  $gray100: 'hsl(206,8%,12%)',\n  $gray200: 'hsl(206,7%,14%)',\n  $gray300: 'hsl(206,7%,15%)',\n  $gray400: 'hsl(206,7%,24%)',\n  $gray500: 'hsl(206,7%,30%)',\n  $gray600: 'hsl(206,5%,53%)',\n  $blue100: 'hsl(212,100%,10%)',\n  $blue200: 'hsl(212,42%,12%)',\n  $blue300: 'hsl(211,55%,16%)',\n  $blue400: 'hsl(209,100%,84%)',\n  $blue500: 'hsl(206,100%,50%)',\n  $blue600: 'hsl(206,100%,60%)',\n  $purple100: 'hsl(252,50%,10%)',\n  $purple200: 'hsl(252,22%,14%)',\n  $purple300: 'hsl(252,33%,20%)',\n  $purple400: 'hsl(252,75%,84%)',\n  $purple500: 'hsl(252,78%,60%)',\n  $purple600: 'hsl(252,78%,71%)',\n  $green100: 'hsl(152,75%,8%)',\n  $green200: 'hsl(152,72%,11%)',\n  $green300: 'hsl(150,60%,20%)',\n  $green400: 'hsl(150,60%,40%)',\n  $green500: 'hsl(148,60%,50%)',\n  $green600: 'hsl(148,58%,60%)',\n  $red100: 'hsl(346,100%,8%)',\n  $red200: 'hsl(346,94%,13%)',\n  $red300: 'hsl(348,90%,20%)',\n  $red400: 'hsl(350,90%,40%)',\n  $red500: 'hsl(352,100%,50%)',\n  $red600: 'hsl(352,79%,65%)',\n  $yellow100: 'hsl(52,50%,10%)',\n  $yellow200: 'hsl(52,22%,14%)',\n  $yellow300: 'hsl(52,33%,20%)',\n  $yellow400: 'hsl(52,75%,78%)',\n  $yellow500: 'hsl(52,78%,45%)',\n  $yellow600: 'hsl(52,90%,45%)'\n};\nexport const {\n  styled,\n  css\n} = createStyled({\n  tokens: theme,\n  breakpoints: {\n    default: rule => rule,\n    bp1: rule => `@media (min-width: 520px) { ${rule} }`,\n    bp2: rule => `@media (min-width: 900px) { ${rule} }`,\n    bp3: rule => `@media (min-width: 1200px) { ${rule} }`,\n    bp4: rule => `@media (min-width: 1800px) { ${rule} }`,\n    motion: rule => `@media (prefers-reduced-motion) { ${rule} }`,\n    hover: rule => `@media (hover: hover) { ${rule} }`,\n    dark: rule => `@media (prefers-color-scheme: dark) { ${rule} }`,\n    light: rule => `@media (prefers-color-scheme: light) { ${rule} }`\n  },\n  utils: {\n    p: config => value => ({\n      paddingTop: value,\n      paddingBottom: value,\n      paddingLeft: value,\n      paddingRight: value\n    }),\n    pt: config => value => ({\n      paddingTop: value\n    }),\n    pr: config => value => ({\n      paddingRight: value\n    }),\n    pb: config => value => ({\n      paddingBottom: value\n    }),\n    pl: config => value => ({\n      paddingLeft: value\n    }),\n    px: config => value => ({\n      paddingLeft: value,\n      paddingRight: value\n    }),\n    py: config => value => ({\n      paddingTop: value,\n      paddingBottom: value\n    }),\n    m: config => value => ({\n      marginTop: value,\n      marginBottom: value,\n      marginLeft: value,\n      marginRight: value\n    }),\n    mt: config => value => ({\n      marginTop: value\n    }),\n    mr: config => value => ({\n      marginRight: value\n    }),\n    mb: config => value => ({\n      marginBottom: value\n    }),\n    ml: config => value => ({\n      marginLeft: value\n    }),\n    mx: config => value => ({\n      marginLeft: value,\n      marginRight: value\n    }),\n    my: config => value => ({\n      marginTop: value,\n      marginBottom: value\n    }),\n    ta: config => value => ({\n      textAlign: value\n    }),\n    fd: config => value => ({\n      flexDirection: value\n    }),\n    fw: config => value => ({\n      flexWrap: value\n    }),\n    ai: config => value => ({\n      alignItems: value\n    }),\n    ac: config => value => ({\n      alignContent: value\n    }),\n    jc: config => value => ({\n      justifyContent: value\n    }),\n    as: config => value => ({\n      alignSelf: value\n    }),\n    fg: config => value => ({\n      flexGrow: value\n    }),\n    fs: config => value => ({\n      flexShrink: value\n    }),\n    fb: config => value => ({\n      flexBasis: value\n    }),\n    bc: config => value => ({\n      backgroundColor: value\n    }),\n    br: config => value => ({\n      borderRadius: value\n    }),\n    btrr: config => value => ({\n      borderTopRightRadius: value\n    }),\n    bbrr: config => value => ({\n      borderBottomRightRadius: value\n    }),\n    bblr: config => value => ({\n      borderBottomLeftRadius: value\n    }),\n    btlr: config => value => ({\n      borderTopLeftRadius: value\n    }),\n    bs: config => value => ({\n      boxShadow: value\n    }),\n    lh: config => value => ({\n      lineHeight: value\n    }),\n    ox: config => value => ({\n      overflowX: value\n    }),\n    oy: config => value => ({\n      overflowY: value\n    }),\n    pe: config => value => ({\n      pointerEvents: value\n    }),\n    us: config => value => ({\n      userSelect: value\n    }),\n    size: config => value => ({\n      width: value,\n      height: value\n    }),\n    linearGradient: config => value => ({\n      backgroundImage: `linear-gradient(${value})`\n    })\n  }\n});\nexport const darkThemeClass = css.theme({\n  colors: darkTheme\n});","map":{"version":3,"sources":["/Users/pedroduarte/Projects/byrd/stitches.config.ts"],"names":["createStyled","theme","breakpoints","colors","$black","$white","$gray","$blue","$red","$yellow","$pink","$turq","$orange","fonts","$sans","$mono","fontSizes","$1","$2","$3","$4","$5","$6","$7","$8","$9","space","sizes","radii","opacity","darkTheme","$hiContrast","$loContrast","$canvas","$gray100","$gray200","$gray300","$gray400","$gray500","$gray600","$blue100","$blue200","$blue300","$blue400","$blue500","$blue600","$purple100","$purple200","$purple300","$purple400","$purple500","$purple600","$green100","$green200","$green300","$green400","$green500","$green600","$red100","$red200","$red300","$red400","$red500","$red600","$yellow100","$yellow200","$yellow300","$yellow400","$yellow500","$yellow600","styled","css","tokens","default","rule","bp1","bp2","bp3","bp4","motion","hover","dark","light","utils","p","config","value","paddingTop","paddingBottom","paddingLeft","paddingRight","pt","pr","pb","pl","px","py","m","marginTop","marginBottom","marginLeft","marginRight","mt","mr","mb","ml","mx","my","ta","textAlign","fd","flexDirection","fw","flexWrap","ai","alignItems","ac","alignContent","jc","justifyContent","as","alignSelf","fg","flexGrow","fs","flexShrink","fb","flexBasis","bc","backgroundColor","br","borderRadius","btrr","borderTopRightRadius","bbrr","borderBottomRightRadius","bblr","borderBottomLeftRadius","btlr","borderTopLeftRadius","bs","boxShadow","lh","lineHeight","ox","overflowX","oy","overflowY","pe","pointerEvents","us","userSelect","size","width","height","linearGradient","backgroundImage","darkThemeClass"],"mappings":"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","sourcesContent":["import { createStyled } from '@stitches/react';\n\nexport const theme = {\n  breakpoints: ['575px', '750px', '1000px', '1200px'],\n  colors: {\n    $black: 'rgba(19, 19, 21, 1)',\n    $white: 'rgba(255, 255, 255, 1)',\n    $gray: 'rgba(128, 128, 128, 1)',\n    $blue: 'rgba(3, 136, 252, 1)',\n    $red: 'rgba(249, 16, 74, 1)',\n    $yellow: 'rgba(255, 221, 0, 1)',\n    $pink: 'rgba(232, 141, 163, 1)',\n    $turq: 'rgba(0, 245, 196, 1)',\n    $orange: 'rgba(255, 135, 31, 1)',\n  },\n  fonts: {\n    $sans: 'Inter,sans-serif',\n    $mono: 'Fira Mono,monospace',\n  },\n  fontSizes: {\n    $1: '12px',\n    $2: '14px',\n    $3: '16px',\n    $4: '20px',\n    $5: '24px',\n    $6: '32px',\n    $7: '48px',\n    $8: '64px',\n    $9: '72px',\n  },\n  space: {\n    $1: '4px',\n    $2: '8px',\n    $3: '16px',\n    $4: '32px',\n    $5: '64px',\n    $6: '128px',\n    $7: '256px',\n    $8: '512px',\n  },\n  sizes: {\n    $1: '4px',\n    $2: '8px',\n    $3: '16px',\n    $4: '32px',\n    $5: '64px',\n    $6: '128px',\n    $7: '256px',\n    $8: '512px',\n  },\n\n  radii: { '1': '2px', '2': '4px', '3': '8px' },\n  opacity: { '1': '10%', '2': '30%', '3': '50%', '4': '70%', '5': '90%', '6': '100%' },\n} as const;\n\nexport const darkTheme = {\n  $hiContrast: 'hsl(206,2%,93%)',\n  $loContrast: 'hsl(206,8%,8%)',\n\n  $canvas: 'hsl(0,0%,15%)',\n\n  $gray100: 'hsl(206,8%,12%)',\n  $gray200: 'hsl(206,7%,14%)',\n  $gray300: 'hsl(206,7%,15%)',\n  $gray400: 'hsl(206,7%,24%)',\n  $gray500: 'hsl(206,7%,30%)',\n  $gray600: 'hsl(206,5%,53%)',\n\n  $blue100: 'hsl(212,100%,10%)',\n  $blue200: 'hsl(212,42%,12%)',\n  $blue300: 'hsl(211,55%,16%)',\n  $blue400: 'hsl(209,100%,84%)',\n  $blue500: 'hsl(206,100%,50%)',\n  $blue600: 'hsl(206,100%,60%)',\n\n  $purple100: 'hsl(252,50%,10%)',\n  $purple200: 'hsl(252,22%,14%)',\n  $purple300: 'hsl(252,33%,20%)',\n  $purple400: 'hsl(252,75%,84%)',\n  $purple500: 'hsl(252,78%,60%)',\n  $purple600: 'hsl(252,78%,71%)',\n\n  $green100: 'hsl(152,75%,8%)',\n  $green200: 'hsl(152,72%,11%)',\n  $green300: 'hsl(150,60%,20%)',\n  $green400: 'hsl(150,60%,40%)',\n  $green500: 'hsl(148,60%,50%)',\n  $green600: 'hsl(148,58%,60%)',\n\n  $red100: 'hsl(346,100%,8%)',\n  $red200: 'hsl(346,94%,13%)',\n  $red300: 'hsl(348,90%,20%)',\n  $red400: 'hsl(350,90%,40%)',\n  $red500: 'hsl(352,100%,50%)',\n  $red600: 'hsl(352,79%,65%)',\n\n  $yellow100: 'hsl(52,50%,10%)',\n  $yellow200: 'hsl(52,22%,14%)',\n  $yellow300: 'hsl(52,33%,20%)',\n  $yellow400: 'hsl(52,75%,78%)',\n  $yellow500: 'hsl(52,78%,45%)',\n  $yellow600: 'hsl(52,90%,45%)',\n} as const;\n\nexport const { styled, css } = createStyled({\n  tokens: theme,\n  breakpoints: {\n    default: (rule) => rule,\n    bp1: (rule) => `@media (min-width: 520px) { ${rule} }`,\n    bp2: (rule) => `@media (min-width: 900px) { ${rule} }`,\n    bp3: (rule) => `@media (min-width: 1200px) { ${rule} }`,\n    bp4: (rule) => `@media (min-width: 1800px) { ${rule} }`,\n    motion: (rule) => `@media (prefers-reduced-motion) { ${rule} }`,\n    hover: (rule) => `@media (hover: hover) { ${rule} }`,\n    dark: (rule) => `@media (prefers-color-scheme: dark) { ${rule} }`,\n    light: (rule) => `@media (prefers-color-scheme: light) { ${rule} }`,\n  },\n  utils: {\n    p: (config) => (value: keyof typeof theme['space'] | (string & {})) => ({\n      paddingTop: value,\n      paddingBottom: value,\n      paddingLeft: value,\n      paddingRight: value,\n    }),\n    pt: (config) => (value: keyof typeof theme['space'] | (string & {})) => ({\n      paddingTop: value,\n    }),\n    pr: (config) => (value: keyof typeof theme['space'] | (string & {})) => ({\n      paddingRight: value,\n    }),\n    pb: (config) => (value: keyof typeof theme['space'] | (string & {})) => ({\n      paddingBottom: value,\n    }),\n    pl: (config) => (value: keyof typeof theme['space'] | (string & {})) => ({\n      paddingLeft: value,\n    }),\n    px: (config) => (value: keyof typeof theme['space'] | (string & {})) => ({\n      paddingLeft: value,\n      paddingRight: value,\n    }),\n    py: (config) => (value: keyof typeof theme['space'] | (string & {})) => ({\n      paddingTop: value,\n      paddingBottom: value,\n    }),\n    m: (config) => (value: keyof typeof theme['space'] | (string & {})) => ({\n      marginTop: value,\n      marginBottom: value,\n      marginLeft: value,\n      marginRight: value,\n    }),\n    mt: (config) => (value: keyof typeof theme['space'] | (string & {})) => ({\n      marginTop: value,\n    }),\n    mr: (config) => (value: keyof typeof theme['space'] | (string & {})) => ({\n      marginRight: value,\n    }),\n    mb: (config) => (value: keyof typeof theme['space'] | (string & {})) => ({\n      marginBottom: value,\n    }),\n    ml: (config) => (value: keyof typeof theme['space'] | (string & {})) => ({\n      marginLeft: value,\n    }),\n    mx: (config) => (value: keyof typeof theme['space'] | (string & {})) => ({\n      marginLeft: value,\n      marginRight: value,\n    }),\n    my: (config) => (value: keyof typeof theme['space'] | (string & {})) => ({\n      marginTop: value,\n      marginBottom: value,\n    }),\n\n    ta: (config) => (value) => ({ textAlign: value }),\n\n    fd: (config) => (value) => ({ flexDirection: value }),\n    fw: (config) => (value) => ({ flexWrap: value }),\n\n    ai: (config) => (value) => ({ alignItems: value }),\n    ac: (config) => (value) => ({ alignContent: value }),\n    jc: (config) => (value) => ({ justifyContent: value }),\n    as: (config) => (value) => ({ alignSelf: value }),\n    fg: (config) => (value) => ({ flexGrow: value }),\n    fs: (config) => (value) => ({ flexShrink: value }),\n    fb: (config) => (value) => ({ flexBasis: value }),\n\n    bc: (config) => (value: keyof typeof theme['colors'] | (string & {})) => ({\n      backgroundColor: value,\n    }),\n\n    br: (config) => (value: keyof typeof theme['radii'] | (string & {})) => ({\n      borderRadius: value,\n    }),\n    btrr: (config) => (value: keyof typeof theme['radii'] | (string & {})) => ({\n      borderTopRightRadius: value,\n    }),\n    bbrr: (config) => (value: keyof typeof theme['radii'] | (string & {})) => ({\n      borderBottomRightRadius: value,\n    }),\n    bblr: (config) => (value: keyof typeof theme['radii'] | (string & {})) => ({\n      borderBottomLeftRadius: value,\n    }),\n    btlr: (config) => (value: keyof typeof theme['radii'] | (string & {})) => ({\n      borderTopLeftRadius: value,\n    }),\n\n    bs: (config) => (value) => ({ boxShadow: value }),\n\n    lh: (config) => (value) => ({ lineHeight: value }),\n\n    ox: (config) => (value) => ({ overflowX: value }),\n    oy: (config) => (value) => ({ overflowY: value }),\n\n    pe: (config) => (value) => ({ pointerEvents: value }),\n    us: (config) => (value) => ({ userSelect: value }),\n\n    size: (config) => (value: keyof typeof theme['sizes'] | (string & {})) => ({\n      width: value,\n      height: value,\n    }),\n\n    linearGradient: (config) => (value) => ({\n      backgroundImage: `linear-gradient(${value})`,\n    }),\n  },\n});\n\nexport const darkThemeClass = css.theme({ colors: darkTheme });\n"]},"metadata":{},"sourceType":"module"}
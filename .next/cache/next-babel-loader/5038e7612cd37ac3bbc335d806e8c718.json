{"ast":null,"code":"import { createStyled } from '@stitches/react';\nexport var theme = {\n  breakpoints: ['575px', '750px', '1000px', '1200px'],\n  colors: {\n    $black: 'rgb(19, 19, 21)',\n    $white: 'rgb(255, 255, 255)',\n    $gray: 'rgb(128, 128, 128)',\n    $blue: 'rgb(3, 136, 252)',\n    $red: 'rgb(249, 16, 74)',\n    $yellow: 'rgb(255, 221, 0)',\n    $pink: 'rgb(232, 141, 163)',\n    $turq: 'rgb(0, 245, 196)',\n    $orange: 'rgb(255, 135, 31)'\n  },\n  fonts: {\n    $sans: 'Inter,sans-serif',\n    $mono: 'Fira Mono,monospace'\n  },\n  fontSizes: {\n    $1: '12px',\n    $2: '14px',\n    $3: '16px',\n    $4: '20px',\n    $5: '24px',\n    $6: '32px',\n    $7: '48px',\n    $8: '64px',\n    $9: '72px'\n  },\n  lineHeights: {\n    $1: '18px',\n    $2: '21px',\n    $3: '24px',\n    $4: '30px',\n    $5: '36px',\n    $6: '48px',\n    $7: '72px',\n    $8: '96px',\n    $9: '108px'\n  },\n  space: {\n    $1: '4px',\n    $2: '8px',\n    $3: '16px',\n    $4: '32px',\n    $5: '64px',\n    $6: '128px',\n    $7: '256px',\n    $8: '512px'\n  },\n  sizes: {\n    $1: '4px',\n    $2: '8px',\n    $3: '16px',\n    $4: '32px',\n    $5: '64px',\n    $6: '128px',\n    $7: '256px',\n    $8: '512px'\n  },\n  radii: {\n    $1: '2px',\n    $2: '4px',\n    $3: '8px',\n    $round: '9999px'\n  }\n};\n\nvar _createStyled = createStyled({\n  tokens: theme,\n  breakpoints: {\n    bp1: function bp1(rule) {\n      return \"@media (min-width: 520px) { \".concat(rule, \" }\");\n    },\n    bp2: function bp2(rule) {\n      return \"@media (min-width: 900px) { \".concat(rule, \" }\");\n    },\n    bp3: function bp3(rule) {\n      return \"@media (min-width: 1200px) { \".concat(rule, \" }\");\n    }\n  },\n  utils: {\n    p: function p(value) {\n      return {\n        padding: value\n      };\n    },\n    pt: function pt(value) {\n      return {\n        paddingTop: value\n      };\n    },\n    pr: function pr(value) {\n      return {\n        paddingRight: value\n      };\n    },\n    pb: function pb(value) {\n      return {\n        paddingBottom: value\n      };\n    },\n    pl: function pl(value) {\n      return {\n        paddingLeft: value\n      };\n    },\n    px: function px(value) {\n      return {\n        paddingLeft: value,\n        paddingRight: value\n      };\n    },\n    py: function py(value) {\n      return {\n        paddingTop: value,\n        paddingBottom: value\n      };\n    },\n    m: function m(value) {\n      return {\n        marginTop: value,\n        marginBottom: value,\n        marginLeft: value,\n        marginRight: value\n      };\n    },\n    mt: function mt(value) {\n      return {\n        marginTop: value\n      };\n    },\n    mr: function mr(value) {\n      return {\n        marginRight: value\n      };\n    },\n    mb: function mb(value) {\n      return {\n        marginBottom: value\n      };\n    },\n    ml: function ml(value) {\n      return {\n        marginLeft: value\n      };\n    },\n    mx: function mx(value) {\n      return {\n        marginLeft: value,\n        marginRight: value\n      };\n    },\n    my: function my(value) {\n      return {\n        marginTop: value,\n        marginBottom: value\n      };\n    },\n    bc: function bc(value) {\n      return {\n        backgroundColor: value\n      };\n    },\n    size: function size(value) {\n      return {\n        width: value,\n        height: value\n      };\n    }\n  }\n}),\n    styled = _createStyled.styled,\n    css = _createStyled.css;\n\nexport { styled, css };","map":{"version":3,"sources":["/Users/pedroduarte/Projects/byrd/stitches.config.ts"],"names":["createStyled","theme","breakpoints","colors","$black","$white","$gray","$blue","$red","$yellow","$pink","$turq","$orange","fonts","$sans","$mono","fontSizes","$1","$2","$3","$4","$5","$6","$7","$8","$9","lineHeights","space","sizes","radii","$round","tokens","bp1","rule","bp2","bp3","utils","p","value","padding","pt","paddingTop","pr","paddingRight","pb","paddingBottom","pl","paddingLeft","px","py","m","marginTop","marginBottom","marginLeft","marginRight","mt","mr","mb","ml","mx","my","bc","backgroundColor","size","width","height","styled","css"],"mappings":"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","sourcesContent":["import { createStyled } from '@stitches/react';\n\nexport const theme = {\n  breakpoints: ['575px', '750px', '1000px', '1200px'],\n  colors: {\n    $black: 'rgb(19, 19, 21)',\n    $white: 'rgb(255, 255, 255)',\n    $gray: 'rgb(128, 128, 128)',\n    $blue: 'rgb(3, 136, 252)',\n    $red: 'rgb(249, 16, 74)',\n    $yellow: 'rgb(255, 221, 0)',\n    $pink: 'rgb(232, 141, 163)',\n    $turq: 'rgb(0, 245, 196)',\n    $orange: 'rgb(255, 135, 31)',\n  },\n  fonts: {\n    $sans: 'Inter,sans-serif',\n    $mono: 'Fira Mono,monospace',\n  },\n  fontSizes: {\n    $1: '12px',\n    $2: '14px',\n    $3: '16px',\n    $4: '20px',\n    $5: '24px',\n    $6: '32px',\n    $7: '48px',\n    $8: '64px',\n    $9: '72px',\n  },\n  lineHeights: {\n    $1: '18px',\n    $2: '21px',\n    $3: '24px',\n    $4: '30px',\n    $5: '36px',\n    $6: '48px',\n    $7: '72px',\n    $8: '96px',\n    $9: '108px',\n  },\n  space: {\n    $1: '4px',\n    $2: '8px',\n    $3: '16px',\n    $4: '32px',\n    $5: '64px',\n    $6: '128px',\n    $7: '256px',\n    $8: '512px',\n  },\n  sizes: {\n    $1: '4px',\n    $2: '8px',\n    $3: '16px',\n    $4: '32px',\n    $5: '64px',\n    $6: '128px',\n    $7: '256px',\n    $8: '512px',\n  },\n  radii: {\n    $1: '2px',\n    $2: '4px',\n    $3: '8px',\n    $round: '9999px',\n  },\n};\n\nexport const { styled, css } = createStyled({\n  tokens: theme,\n  breakpoints: {\n    bp1: (rule) => `@media (min-width: 520px) { ${rule} }`,\n    bp2: (rule) => `@media (min-width: 900px) { ${rule} }`,\n    bp3: (rule) => `@media (min-width: 1200px) { ${rule} }`,\n  },\n  utils: {\n    p: (value: keyof typeof theme['space'] | (string & {})) => ({\n      padding: value,\n    }),\n    pt: (value: keyof typeof theme['space'] | (string & {})) => ({\n      paddingTop: value,\n    }),\n    pr: (value: keyof typeof theme['space'] | (string & {})) => ({\n      paddingRight: value,\n    }),\n    pb: (value: keyof typeof theme['space'] | (string & {})) => ({\n      paddingBottom: value,\n    }),\n    pl: (value: keyof typeof theme['space'] | (string & {})) => ({\n      paddingLeft: value,\n    }),\n    px: (value: keyof typeof theme['space'] | (string & {})) => ({\n      paddingLeft: value,\n      paddingRight: value,\n    }),\n    py: (value: keyof typeof theme['space'] | (string & {})) => ({\n      paddingTop: value,\n      paddingBottom: value,\n    }),\n    m: (value: keyof typeof theme['space'] | (string & {})) => ({\n      marginTop: value,\n      marginBottom: value,\n      marginLeft: value,\n      marginRight: value,\n    }),\n    mt: (value: keyof typeof theme['space'] | (string & {})) => ({\n      marginTop: value,\n    }),\n    mr: (value: keyof typeof theme['space'] | (string & {})) => ({\n      marginRight: value,\n    }),\n    mb: (value: keyof typeof theme['space'] | (string & {})) => ({\n      marginBottom: value,\n    }),\n    ml: (value: keyof typeof theme['space'] | (string & {})) => ({\n      marginLeft: value,\n    }),\n    mx: (value: keyof typeof theme['space'] | (string & {})) => ({\n      marginLeft: value,\n      marginRight: value,\n    }),\n    my: (value: keyof typeof theme['space'] | (string & {})) => ({\n      marginTop: value,\n      marginBottom: value,\n    }),\n    bc: (value: keyof typeof theme['colors'] | (string & {})) => ({\n      backgroundColor: value,\n    }),\n    size: (value: keyof typeof theme['sizes'] | (string & {})) => ({\n      width: value,\n      height: value,\n    }),\n  },\n});\n"]},"metadata":{},"sourceType":"module"}
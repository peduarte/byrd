{"ast":null,"code":"import { createStyled } from '@stitches/react';\nexport var theme = {\n  breakpoints: ['575px', '750px', '1000px', '1200px'],\n  colors: {\n    $black: 'rgba(19, 19, 21, 1)',\n    $white: 'rgba(255, 255, 255, 1)',\n    $gray: 'rgba(128, 128, 128, 1)',\n    $blue: 'rgba(3, 136, 252, 1)',\n    $red: 'rgba(249, 16, 74, 1)',\n    $yellow: 'rgba(255, 221, 0, 1)',\n    $pink: 'rgba(232, 141, 163, 1)',\n    $turq: 'rgba(0, 245, 196, 1)',\n    $orange: 'rgba(255, 135, 31, 1)'\n  },\n  fonts: {\n    $sans: 'Inter,sans-serif',\n    $mono: 'Fira Mono,monospace'\n  },\n  fontSizes: {\n    $1: '12px',\n    $2: '14px',\n    $3: '16px',\n    $4: '20px',\n    $5: '24px',\n    $6: '32px',\n    $7: '48px',\n    $8: '64px',\n    $9: '72px'\n  },\n  space: {\n    $1: '4px',\n    $2: '8px',\n    $3: '16px',\n    $4: '32px',\n    $5: '64px',\n    $6: '128px',\n    $7: '256px',\n    $8: '512px'\n  },\n  sizes: {\n    $1: '4px',\n    $2: '8px',\n    $3: '16px',\n    $4: '32px',\n    $5: '64px',\n    $6: '128px',\n    $7: '256px',\n    $8: '512px'\n  },\n  radii: {\n    '1': '2px',\n    '2': '4px',\n    '3': '8px'\n  },\n  opacity: {\n    '1': '10%',\n    '2': '30%',\n    '3': '50%',\n    '4': '70%',\n    '5': '90%',\n    '6': '100%'\n  }\n};\nexport var darkTheme = {\n  $hiContrast: 'hsl(206,2%,93%)',\n  $loContrast: 'hsl(206,8%,8%)',\n  $canvas: 'hsl(0,0%,15%)',\n  $gray100: 'hsl(206,8%,12%)',\n  $gray200: 'hsl(206,7%,14%)',\n  $gray300: 'hsl(206,7%,15%)',\n  $gray400: 'hsl(206,7%,24%)',\n  $gray500: 'hsl(206,7%,30%)',\n  $gray600: 'hsl(206,5%,53%)',\n  $blue100: 'hsl(212,100%,10%)',\n  $blue200: 'hsl(212,42%,12%)',\n  $blue300: 'hsl(211,55%,16%)',\n  $blue400: 'hsl(209,100%,84%)',\n  $blue500: 'hsl(206,100%,50%)',\n  $blue600: 'hsl(206,100%,60%)',\n  $purple100: 'hsl(252,50%,10%)',\n  $purple200: 'hsl(252,22%,14%)',\n  $purple300: 'hsl(252,33%,20%)',\n  $purple400: 'hsl(252,75%,84%)',\n  $purple500: 'hsl(252,78%,60%)',\n  $purple600: 'hsl(252,78%,71%)',\n  $green100: 'hsl(152,75%,8%)',\n  $green200: 'hsl(152,72%,11%)',\n  $green300: 'hsl(150,60%,20%)',\n  $green400: 'hsl(150,60%,40%)',\n  $green500: 'hsl(148,60%,50%)',\n  $green600: 'hsl(148,58%,60%)',\n  $red100: 'hsl(346,100%,8%)',\n  $red200: 'hsl(346,94%,13%)',\n  $red300: 'hsl(348,90%,20%)',\n  $red400: 'hsl(350,90%,40%)',\n  $red500: 'hsl(352,100%,50%)',\n  $red600: 'hsl(352,79%,65%)',\n  $yellow100: 'hsl(52,50%,10%)',\n  $yellow200: 'hsl(52,22%,14%)',\n  $yellow300: 'hsl(52,33%,20%)',\n  $yellow400: 'hsl(52,75%,78%)',\n  $yellow500: 'hsl(52,78%,45%)',\n  $yellow600: 'hsl(52,90%,45%)'\n};\n\nvar _createStyled = createStyled({\n  tokens: theme,\n  breakpoints: {\n    \"default\": function _default(rule) {\n      return rule;\n    },\n    bp1: function bp1(rule) {\n      return \"@media (min-width: 520px) { \".concat(rule, \" }\");\n    },\n    bp2: function bp2(rule) {\n      return \"@media (min-width: 900px) { \".concat(rule, \" }\");\n    },\n    bp3: function bp3(rule) {\n      return \"@media (min-width: 1200px) { \".concat(rule, \" }\");\n    },\n    bp4: function bp4(rule) {\n      return \"@media (min-width: 1800px) { \".concat(rule, \" }\");\n    },\n    motion: function motion(rule) {\n      return \"@media (prefers-reduced-motion) { \".concat(rule, \" }\");\n    },\n    hover: function hover(rule) {\n      return \"@media (hover: hover) { \".concat(rule, \" }\");\n    },\n    dark: function dark(rule) {\n      return \"@media (prefers-color-scheme: dark) { \".concat(rule, \" }\");\n    },\n    light: function light(rule) {\n      return \"@media (prefers-color-scheme: light) { \".concat(rule, \" }\");\n    }\n  },\n  utils: {\n    p: function p(config) {\n      return function (value) {\n        return {\n          paddingTop: value,\n          paddingBottom: value,\n          paddingLeft: value,\n          paddingRight: value\n        };\n      };\n    },\n    pt: function pt(config) {\n      return function (value) {\n        return {\n          paddingTop: value\n        };\n      };\n    },\n    pr: function pr(config) {\n      return function (value) {\n        return {\n          paddingRight: value\n        };\n      };\n    },\n    pb: function pb(config) {\n      return function (value) {\n        return {\n          paddingBottom: value\n        };\n      };\n    },\n    pl: function pl(config) {\n      return function (value) {\n        return {\n          paddingLeft: value\n        };\n      };\n    },\n    px: function px(config) {\n      return function (value) {\n        return {\n          paddingLeft: value,\n          paddingRight: value\n        };\n      };\n    },\n    py: function py(config) {\n      return function (value) {\n        return {\n          paddingTop: value,\n          paddingBottom: value\n        };\n      };\n    },\n    m: function m(config) {\n      return function (value) {\n        return {\n          marginTop: value,\n          marginBottom: value,\n          marginLeft: value,\n          marginRight: value\n        };\n      };\n    },\n    mt: function mt(config) {\n      return function (value) {\n        return {\n          marginTop: value\n        };\n      };\n    },\n    mr: function mr(config) {\n      return function (value) {\n        return {\n          marginRight: value\n        };\n      };\n    },\n    mb: function mb(config) {\n      return function (value) {\n        return {\n          marginBottom: value\n        };\n      };\n    },\n    ml: function ml(config) {\n      return function (value) {\n        return {\n          marginLeft: value\n        };\n      };\n    },\n    mx: function mx(config) {\n      return function (value) {\n        return {\n          marginLeft: value,\n          marginRight: value\n        };\n      };\n    },\n    my: function my(config) {\n      return function (value) {\n        return {\n          marginTop: value,\n          marginBottom: value\n        };\n      };\n    },\n    ta: function ta(config) {\n      return function (value) {\n        return {\n          textAlign: value\n        };\n      };\n    },\n    fd: function fd(config) {\n      return function (value) {\n        return {\n          flexDirection: value\n        };\n      };\n    },\n    fw: function fw(config) {\n      return function (value) {\n        return {\n          flexWrap: value\n        };\n      };\n    },\n    ai: function ai(config) {\n      return function (value) {\n        return {\n          alignItems: value\n        };\n      };\n    },\n    ac: function ac(config) {\n      return function (value) {\n        return {\n          alignContent: value\n        };\n      };\n    },\n    jc: function jc(config) {\n      return function (value) {\n        return {\n          justifyContent: value\n        };\n      };\n    },\n    as: function as(config) {\n      return function (value) {\n        return {\n          alignSelf: value\n        };\n      };\n    },\n    fg: function fg(config) {\n      return function (value) {\n        return {\n          flexGrow: value\n        };\n      };\n    },\n    fs: function fs(config) {\n      return function (value) {\n        return {\n          flexShrink: value\n        };\n      };\n    },\n    fb: function fb(config) {\n      return function (value) {\n        return {\n          flexBasis: value\n        };\n      };\n    },\n    bc: function bc(config) {\n      return function (value) {\n        return {\n          backgroundColor: value\n        };\n      };\n    },\n    br: function br(config) {\n      return function (value) {\n        return {\n          borderRadius: value\n        };\n      };\n    },\n    btrr: function btrr(config) {\n      return function (value) {\n        return {\n          borderTopRightRadius: value\n        };\n      };\n    },\n    bbrr: function bbrr(config) {\n      return function (value) {\n        return {\n          borderBottomRightRadius: value\n        };\n      };\n    },\n    bblr: function bblr(config) {\n      return function (value) {\n        return {\n          borderBottomLeftRadius: value\n        };\n      };\n    },\n    btlr: function btlr(config) {\n      return function (value) {\n        return {\n          borderTopLeftRadius: value\n        };\n      };\n    },\n    bs: function bs(config) {\n      return function (value) {\n        return {\n          boxShadow: value\n        };\n      };\n    },\n    lh: function lh(config) {\n      return function (value) {\n        return {\n          lineHeight: value\n        };\n      };\n    },\n    ox: function ox(config) {\n      return function (value) {\n        return {\n          overflowX: value\n        };\n      };\n    },\n    oy: function oy(config) {\n      return function (value) {\n        return {\n          overflowY: value\n        };\n      };\n    },\n    pe: function pe(config) {\n      return function (value) {\n        return {\n          pointerEvents: value\n        };\n      };\n    },\n    us: function us(config) {\n      return function (value) {\n        return {\n          userSelect: value\n        };\n      };\n    },\n    size: function size(config) {\n      return function (value) {\n        return {\n          width: value,\n          height: value\n        };\n      };\n    },\n    linearGradient: function linearGradient(config) {\n      return function (value) {\n        return {\n          backgroundImage: \"linear-gradient(\".concat(value, \")\")\n        };\n      };\n    }\n  }\n}),\n    styled = _createStyled.styled,\n    css = _createStyled.css;\n\nexport { styled, css };\nexport var darkThemeClass = css.theme({\n  colors: darkTheme\n});","map":{"version":3,"sources":["/Users/pedroduarte/Projects/byrd/stitches.config.ts"],"names":["createStyled","theme","breakpoints","colors","$black","$white","$gray","$blue","$red","$yellow","$pink","$turq","$orange","fonts","$sans","$mono","fontSizes","$1","$2","$3","$4","$5","$6","$7","$8","$9","space","sizes","radii","opacity","darkTheme","$hiContrast","$loContrast","$canvas","$gray100","$gray200","$gray300","$gray400","$gray500","$gray600","$blue100","$blue200","$blue300","$blue400","$blue500","$blue600","$purple100","$purple200","$purple300","$purple400","$purple500","$purple600","$green100","$green200","$green300","$green400","$green500","$green600","$red100","$red200","$red300","$red400","$red500","$red600","$yellow100","$yellow200","$yellow300","$yellow400","$yellow500","$yellow600","tokens","rule","bp1","bp2","bp3","bp4","motion","hover","dark","light","utils","p","config","value","paddingTop","paddingBottom","paddingLeft","paddingRight","pt","pr","pb","pl","px","py","m","marginTop","marginBottom","marginLeft","marginRight","mt","mr","mb","ml","mx","my","ta","textAlign","fd","flexDirection","fw","flexWrap","ai","alignItems","ac","alignContent","jc","justifyContent","as","alignSelf","fg","flexGrow","fs","flexShrink","fb","flexBasis","bc","backgroundColor","br","borderRadius","btrr","borderTopRightRadius","bbrr","borderBottomRightRadius","bblr","borderBottomLeftRadius","btlr","borderTopLeftRadius","bs","boxShadow","lh","lineHeight","ox","overflowX","oy","overflowY","pe","pointerEvents","us","userSelect","size","width","height","linearGradient","backgroundImage","styled","css","darkThemeClass"],"mappings":"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","sourcesContent":["import { createStyled } from '@stitches/react';\n\nexport const theme = {\n  breakpoints: ['575px', '750px', '1000px', '1200px'],\n  colors: {\n    $black: 'rgba(19, 19, 21, 1)',\n    $white: 'rgba(255, 255, 255, 1)',\n    $gray: 'rgba(128, 128, 128, 1)',\n    $blue: 'rgba(3, 136, 252, 1)',\n    $red: 'rgba(249, 16, 74, 1)',\n    $yellow: 'rgba(255, 221, 0, 1)',\n    $pink: 'rgba(232, 141, 163, 1)',\n    $turq: 'rgba(0, 245, 196, 1)',\n    $orange: 'rgba(255, 135, 31, 1)',\n  },\n  fonts: {\n    $sans: 'Inter,sans-serif',\n    $mono: 'Fira Mono,monospace',\n  },\n  fontSizes: {\n    $1: '12px',\n    $2: '14px',\n    $3: '16px',\n    $4: '20px',\n    $5: '24px',\n    $6: '32px',\n    $7: '48px',\n    $8: '64px',\n    $9: '72px',\n  },\n  space: {\n    $1: '4px',\n    $2: '8px',\n    $3: '16px',\n    $4: '32px',\n    $5: '64px',\n    $6: '128px',\n    $7: '256px',\n    $8: '512px',\n  },\n  sizes: {\n    $1: '4px',\n    $2: '8px',\n    $3: '16px',\n    $4: '32px',\n    $5: '64px',\n    $6: '128px',\n    $7: '256px',\n    $8: '512px',\n  },\n\n  radii: { '1': '2px', '2': '4px', '3': '8px' },\n  opacity: { '1': '10%', '2': '30%', '3': '50%', '4': '70%', '5': '90%', '6': '100%' },\n} as const;\n\nexport const darkTheme = {\n  $hiContrast: 'hsl(206,2%,93%)',\n  $loContrast: 'hsl(206,8%,8%)',\n\n  $canvas: 'hsl(0,0%,15%)',\n\n  $gray100: 'hsl(206,8%,12%)',\n  $gray200: 'hsl(206,7%,14%)',\n  $gray300: 'hsl(206,7%,15%)',\n  $gray400: 'hsl(206,7%,24%)',\n  $gray500: 'hsl(206,7%,30%)',\n  $gray600: 'hsl(206,5%,53%)',\n\n  $blue100: 'hsl(212,100%,10%)',\n  $blue200: 'hsl(212,42%,12%)',\n  $blue300: 'hsl(211,55%,16%)',\n  $blue400: 'hsl(209,100%,84%)',\n  $blue500: 'hsl(206,100%,50%)',\n  $blue600: 'hsl(206,100%,60%)',\n\n  $purple100: 'hsl(252,50%,10%)',\n  $purple200: 'hsl(252,22%,14%)',\n  $purple300: 'hsl(252,33%,20%)',\n  $purple400: 'hsl(252,75%,84%)',\n  $purple500: 'hsl(252,78%,60%)',\n  $purple600: 'hsl(252,78%,71%)',\n\n  $green100: 'hsl(152,75%,8%)',\n  $green200: 'hsl(152,72%,11%)',\n  $green300: 'hsl(150,60%,20%)',\n  $green400: 'hsl(150,60%,40%)',\n  $green500: 'hsl(148,60%,50%)',\n  $green600: 'hsl(148,58%,60%)',\n\n  $red100: 'hsl(346,100%,8%)',\n  $red200: 'hsl(346,94%,13%)',\n  $red300: 'hsl(348,90%,20%)',\n  $red400: 'hsl(350,90%,40%)',\n  $red500: 'hsl(352,100%,50%)',\n  $red600: 'hsl(352,79%,65%)',\n\n  $yellow100: 'hsl(52,50%,10%)',\n  $yellow200: 'hsl(52,22%,14%)',\n  $yellow300: 'hsl(52,33%,20%)',\n  $yellow400: 'hsl(52,75%,78%)',\n  $yellow500: 'hsl(52,78%,45%)',\n  $yellow600: 'hsl(52,90%,45%)',\n} as const;\n\nexport const { styled, css } = createStyled({\n  tokens: theme,\n  breakpoints: {\n    default: (rule) => rule,\n    bp1: (rule) => `@media (min-width: 520px) { ${rule} }`,\n    bp2: (rule) => `@media (min-width: 900px) { ${rule} }`,\n    bp3: (rule) => `@media (min-width: 1200px) { ${rule} }`,\n    bp4: (rule) => `@media (min-width: 1800px) { ${rule} }`,\n    motion: (rule) => `@media (prefers-reduced-motion) { ${rule} }`,\n    hover: (rule) => `@media (hover: hover) { ${rule} }`,\n    dark: (rule) => `@media (prefers-color-scheme: dark) { ${rule} }`,\n    light: (rule) => `@media (prefers-color-scheme: light) { ${rule} }`,\n  },\n  utils: {\n    p: (config) => (value: keyof typeof theme['space'] | (string & {})) => ({\n      paddingTop: value,\n      paddingBottom: value,\n      paddingLeft: value,\n      paddingRight: value,\n    }),\n    pt: (config) => (value: keyof typeof theme['space'] | (string & {})) => ({\n      paddingTop: value,\n    }),\n    pr: (config) => (value: keyof typeof theme['space'] | (string & {})) => ({\n      paddingRight: value,\n    }),\n    pb: (config) => (value: keyof typeof theme['space'] | (string & {})) => ({\n      paddingBottom: value,\n    }),\n    pl: (config) => (value: keyof typeof theme['space'] | (string & {})) => ({\n      paddingLeft: value,\n    }),\n    px: (config) => (value: keyof typeof theme['space'] | (string & {})) => ({\n      paddingLeft: value,\n      paddingRight: value,\n    }),\n    py: (config) => (value: keyof typeof theme['space'] | (string & {})) => ({\n      paddingTop: value,\n      paddingBottom: value,\n    }),\n    m: (config) => (value: keyof typeof theme['space'] | (string & {})) => ({\n      marginTop: value,\n      marginBottom: value,\n      marginLeft: value,\n      marginRight: value,\n    }),\n    mt: (config) => (value: keyof typeof theme['space'] | (string & {})) => ({\n      marginTop: value,\n    }),\n    mr: (config) => (value: keyof typeof theme['space'] | (string & {})) => ({\n      marginRight: value,\n    }),\n    mb: (config) => (value: keyof typeof theme['space'] | (string & {})) => ({\n      marginBottom: value,\n    }),\n    ml: (config) => (value: keyof typeof theme['space'] | (string & {})) => ({\n      marginLeft: value,\n    }),\n    mx: (config) => (value: keyof typeof theme['space'] | (string & {})) => ({\n      marginLeft: value,\n      marginRight: value,\n    }),\n    my: (config) => (value: keyof typeof theme['space'] | (string & {})) => ({\n      marginTop: value,\n      marginBottom: value,\n    }),\n\n    ta: (config) => (value) => ({ textAlign: value }),\n\n    fd: (config) => (value) => ({ flexDirection: value }),\n    fw: (config) => (value) => ({ flexWrap: value }),\n\n    ai: (config) => (value) => ({ alignItems: value }),\n    ac: (config) => (value) => ({ alignContent: value }),\n    jc: (config) => (value) => ({ justifyContent: value }),\n    as: (config) => (value) => ({ alignSelf: value }),\n    fg: (config) => (value) => ({ flexGrow: value }),\n    fs: (config) => (value) => ({ flexShrink: value }),\n    fb: (config) => (value) => ({ flexBasis: value }),\n\n    bc: (config) => (value: keyof typeof theme['colors'] | (string & {})) => ({\n      backgroundColor: value,\n    }),\n\n    br: (config) => (value: keyof typeof theme['radii'] | (string & {})) => ({\n      borderRadius: value,\n    }),\n    btrr: (config) => (value: keyof typeof theme['radii'] | (string & {})) => ({\n      borderTopRightRadius: value,\n    }),\n    bbrr: (config) => (value: keyof typeof theme['radii'] | (string & {})) => ({\n      borderBottomRightRadius: value,\n    }),\n    bblr: (config) => (value: keyof typeof theme['radii'] | (string & {})) => ({\n      borderBottomLeftRadius: value,\n    }),\n    btlr: (config) => (value: keyof typeof theme['radii'] | (string & {})) => ({\n      borderTopLeftRadius: value,\n    }),\n\n    bs: (config) => (value) => ({ boxShadow: value }),\n\n    lh: (config) => (value) => ({ lineHeight: value }),\n\n    ox: (config) => (value) => ({ overflowX: value }),\n    oy: (config) => (value) => ({ overflowY: value }),\n\n    pe: (config) => (value) => ({ pointerEvents: value }),\n    us: (config) => (value) => ({ userSelect: value }),\n\n    size: (config) => (value: keyof typeof theme['sizes'] | (string & {})) => ({\n      width: value,\n      height: value,\n    }),\n\n    linearGradient: (config) => (value) => ({\n      backgroundImage: `linear-gradient(${value})`,\n    }),\n  },\n});\n\nexport const darkThemeClass = css.theme({ colors: darkTheme });\n"]},"metadata":{},"sourceType":"module"}
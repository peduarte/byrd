{"ast":null,"code":"import { createStyled } from '@stitches/react';\nexport const theme = {\n  breakpoints: ['575px', '750px', '1000px', '1200px'],\n  colors: {\n    $black: 'rgb(19, 19, 21)',\n    $white: 'rgb(255, 255, 255)',\n    $gray: 'rgb(128, 128, 128)',\n    $blue: 'rgb(3, 136, 252)',\n    $red: 'rgb(249, 16, 74)',\n    $yellow: 'rgb(255, 221, 0)',\n    $pink: 'rgb(232, 141, 163)',\n    $turq: 'rgb(0, 245, 196)',\n    $orange: 'rgb(255, 135, 31)'\n  },\n  fonts: {\n    $sans: 'Inter,sans-serif',\n    $mono: 'Fira Mono,monospace'\n  },\n  fontSizes: {\n    $1: '12px',\n    $2: '14px',\n    $3: '16px',\n    $4: '20px',\n    $5: '24px',\n    $6: '32px',\n    $7: '48px',\n    $8: '64px',\n    $9: '72px'\n  },\n  lineHeights: {\n    $1: '18px',\n    $2: '21px',\n    $3: '24px',\n    $4: '30px',\n    $5: '36px',\n    $6: '48px',\n    $7: '72px',\n    $8: '96px',\n    $9: '108px'\n  },\n  space: {\n    $1: '4px',\n    $2: '8px',\n    $3: '16px',\n    $4: '32px',\n    $5: '64px',\n    $6: '128px',\n    $7: '256px',\n    $8: '512px'\n  },\n  sizes: {\n    $1: '4px',\n    $2: '8px',\n    $3: '16px',\n    $4: '32px',\n    $5: '64px',\n    $6: '128px',\n    $7: '256px',\n    $8: '512px'\n  },\n  radii: {\n    $1: '2px',\n    $2: '4px',\n    $3: '8px',\n    $round: '9999px'\n  }\n};\nexport const {\n  styled,\n  css\n} = createStyled({\n  tokens: theme,\n  breakpoints: {\n    bp1: rule => `@media (min-width: 520px) { ${rule} }`,\n    bp2: rule => `@media (min-width: 900px) { ${rule} }`,\n    bp3: rule => `@media (min-width: 1200px) { ${rule} }`,\n    bp4: rule => `@media (min-width: 1800px) { ${rule} }`\n  },\n  utils: {\n    p: value => ({\n      padding: value\n    }),\n    pt: value => ({\n      paddingTop: value\n    }),\n    pr: value => ({\n      paddingRight: value\n    }),\n    pb: value => ({\n      paddingBottom: value\n    }),\n    pl: value => ({\n      paddingLeft: value\n    }),\n    px: value => ({\n      paddingLeft: value,\n      paddingRight: value\n    }),\n    py: value => ({\n      paddingTop: value,\n      paddingBottom: value\n    }),\n    m: value => ({\n      margin: value\n    }),\n    mt: value => ({\n      marginTop: value\n    }),\n    mr: value => ({\n      marginRight: value\n    }),\n    mb: value => ({\n      marginBottom: value\n    }),\n    ml: value => ({\n      marginLeft: value\n    }),\n    mx: value => ({\n      marginLeft: value,\n      marginRight: value\n    }),\n    my: value => ({\n      marginTop: value,\n      marginBottom: value\n    }),\n    bc: value => ({\n      backgroundColor: value\n    }),\n    size: value => ({\n      width: value,\n      height: value\n    })\n  }\n});","map":{"version":3,"sources":["/Users/pedroduarte/Projects/byrd/stitches.config.ts"],"names":["createStyled","theme","breakpoints","colors","$black","$white","$gray","$blue","$red","$yellow","$pink","$turq","$orange","fonts","$sans","$mono","fontSizes","$1","$2","$3","$4","$5","$6","$7","$8","$9","lineHeights","space","sizes","radii","$round","styled","css","tokens","bp1","rule","bp2","bp3","bp4","utils","p","value","padding","pt","paddingTop","pr","paddingRight","pb","paddingBottom","pl","paddingLeft","px","py","m","margin","mt","marginTop","mr","marginRight","mb","marginBottom","ml","marginLeft","mx","my","bc","backgroundColor","size","width","height"],"mappings":"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","sourcesContent":["import { createStyled } from '@stitches/react';\n\nexport const theme = {\n  breakpoints: ['575px', '750px', '1000px', '1200px'],\n  colors: {\n    $black: 'rgb(19, 19, 21)',\n    $white: 'rgb(255, 255, 255)',\n    $gray: 'rgb(128, 128, 128)',\n    $blue: 'rgb(3, 136, 252)',\n    $red: 'rgb(249, 16, 74)',\n    $yellow: 'rgb(255, 221, 0)',\n    $pink: 'rgb(232, 141, 163)',\n    $turq: 'rgb(0, 245, 196)',\n    $orange: 'rgb(255, 135, 31)',\n  },\n  fonts: {\n    $sans: 'Inter,sans-serif',\n    $mono: 'Fira Mono,monospace',\n  },\n  fontSizes: {\n    $1: '12px',\n    $2: '14px',\n    $3: '16px',\n    $4: '20px',\n    $5: '24px',\n    $6: '32px',\n    $7: '48px',\n    $8: '64px',\n    $9: '72px',\n  },\n  lineHeights: {\n    $1: '18px',\n    $2: '21px',\n    $3: '24px',\n    $4: '30px',\n    $5: '36px',\n    $6: '48px',\n    $7: '72px',\n    $8: '96px',\n    $9: '108px',\n  },\n  space: {\n    $1: '4px',\n    $2: '8px',\n    $3: '16px',\n    $4: '32px',\n    $5: '64px',\n    $6: '128px',\n    $7: '256px',\n    $8: '512px',\n  },\n  sizes: {\n    $1: '4px',\n    $2: '8px',\n    $3: '16px',\n    $4: '32px',\n    $5: '64px',\n    $6: '128px',\n    $7: '256px',\n    $8: '512px',\n  },\n  radii: {\n    $1: '2px',\n    $2: '4px',\n    $3: '8px',\n    $round: '9999px',\n  },\n};\n\nexport const { styled, css } = createStyled({\n  tokens: theme,\n  breakpoints: {\n    bp1: (rule) => `@media (min-width: 520px) { ${rule} }`,\n    bp2: (rule) => `@media (min-width: 900px) { ${rule} }`,\n    bp3: (rule) => `@media (min-width: 1200px) { ${rule} }`,\n    bp4: (rule) => `@media (min-width: 1800px) { ${rule} }`,\n  },\n  utils: {\n    p: (value: keyof typeof theme['space'] | (string & {})) => ({\n      padding: value,\n    }),\n    pt: (value: keyof typeof theme['space'] | (string & {})) => ({\n      paddingTop: value,\n    }),\n    pr: (value: keyof typeof theme['space'] | (string & {})) => ({\n      paddingRight: value,\n    }),\n    pb: (value: keyof typeof theme['space'] | (string & {})) => ({\n      paddingBottom: value,\n    }),\n    pl: (value: keyof typeof theme['space'] | (string & {})) => ({\n      paddingLeft: value,\n    }),\n    px: (value: keyof typeof theme['space'] | (string & {})) => ({\n      paddingLeft: value,\n      paddingRight: value,\n    }),\n    py: (value: keyof typeof theme['space'] | (string & {})) => ({\n      paddingTop: value,\n      paddingBottom: value,\n    }),\n    m: (value: keyof typeof theme['space'] | (string & {})) => ({\n      margin: value,\n    }),\n    mt: (value: keyof typeof theme['space'] | (string & {})) => ({\n      marginTop: value,\n    }),\n    mr: (value: keyof typeof theme['space'] | (string & {})) => ({\n      marginRight: value,\n    }),\n    mb: (value: keyof typeof theme['space'] | (string & {})) => ({\n      marginBottom: value,\n    }),\n    ml: (value: keyof typeof theme['space'] | (string & {})) => ({\n      marginLeft: value,\n    }),\n    mx: (value: keyof typeof theme['space'] | (string & {})) => ({\n      marginLeft: value,\n      marginRight: value,\n    }),\n    my: (value: keyof typeof theme['space'] | (string & {})) => ({\n      marginTop: value,\n      marginBottom: value,\n    }),\n    bc: (value: keyof typeof theme['colors'] | (string & {})) => ({\n      backgroundColor: value,\n    }),\n    size: (value: keyof typeof theme['sizes'] | (string & {})) => ({\n      width: value,\n      height: value,\n    }),\n  },\n});\n"]},"metadata":{},"sourceType":"module"}
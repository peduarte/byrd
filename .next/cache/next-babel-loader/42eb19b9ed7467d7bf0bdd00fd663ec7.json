{"ast":null,"code":"var _jsxFileName = \"/Users/pedroduarte/Projects/byrd/pages/_document.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport NextDocument, { Head, Main, NextScript } from 'next/document';\nimport { css } from '../stitches.config';\nexport default class Document extends NextDocument {\n  static async getInitialProps(ctx) {\n    const originalRenderPage = ctx.renderPage;\n\n    try {\n      let extractedStyles;\n\n      ctx.renderPage = () => {\n        const {\n          styles,\n          result\n        } = css.getStyles(originalRenderPage);\n        extractedStyles = styles;\n        return result;\n      };\n\n      const initialProps = await NextDocument.getInitialProps(ctx);\n      return _objectSpread(_objectSpread({}, initialProps), {}, {\n        styles: __jsx(React.Fragment, null, initialProps.styles, extractedStyles.map((content, index) => __jsx(\"style\", {\n          key: index,\n          dangerouslySetInnerHTML: {\n            __html: content\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }\n        })))\n      });\n    } finally {}\n  }\n\n  render() {\n    return __jsx(\"html\", {\n      lang: \"en\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }), __jsx(\"body\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, __jsx(Main, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }), __jsx(NextScript, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/pedroduarte/Projects/byrd/pages/_document.tsx"],"names":["React","NextDocument","Head","Main","NextScript","css","Document","getInitialProps","ctx","originalRenderPage","renderPage","extractedStyles","styles","result","getStyles","initialProps","map","content","index","__html","render"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,IAAuBC,IAAvB,EAA6BC,IAA7B,EAAmCC,UAAnC,QAAqD,eAArD;AACA,SAASC,GAAT,QAAoB,oBAApB;AAEA,eAAe,MAAMC,QAAN,SAAuBL,YAAvB,CAAoC;AACjD,eAAaM,eAAb,CAA6BC,GAA7B,EAAkC;AAChC,UAAMC,kBAAkB,GAAGD,GAAG,CAACE,UAA/B;;AAEA,QAAI;AACF,UAAIC,eAAJ;;AACAH,MAAAA,GAAG,CAACE,UAAJ,GAAiB,MAAM;AACrB,cAAM;AAAEE,UAAAA,MAAF;AAAUC,UAAAA;AAAV,YAAqBR,GAAG,CAACS,SAAJ,CAAcL,kBAAd,CAA3B;AACAE,QAAAA,eAAe,GAAGC,MAAlB;AACA,eAAOC,MAAP;AACD,OAJD;;AAMA,YAAME,YAAY,GAAG,MAAMd,YAAY,CAACM,eAAb,CAA6BC,GAA7B,CAA3B;AAEA,6CACKO,YADL;AAEEH,QAAAA,MAAM,EACJ,4BACGG,YAAY,CAACH,MADhB,EAGGD,eAAe,CAACK,GAAhB,CAAoB,CAACC,OAAD,EAAUC,KAAV,KACnB;AAAO,UAAA,GAAG,EAAEA,KAAZ;AAAmB,UAAA,uBAAuB,EAAE;AAAEC,YAAAA,MAAM,EAAEF;AAAV,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,CAHH;AAHJ;AAYD,KAtBD,SAsBU,CACT;AACF;;AAEDG,EAAAA,MAAM,GAAG;AACP,WACE;AAAM,MAAA,IAAI,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFF,CADF;AASD;;AAxCgD","sourcesContent":["import React from 'react';\nimport NextDocument, { Head, Main, NextScript } from 'next/document';\nimport { css } from '../stitches.config';\n\nexport default class Document extends NextDocument {\n  static async getInitialProps(ctx) {\n    const originalRenderPage = ctx.renderPage;\n\n    try {\n      let extractedStyles;\n      ctx.renderPage = () => {\n        const { styles, result } = css.getStyles(originalRenderPage);\n        extractedStyles = styles;\n        return result;\n      };\n\n      const initialProps = await NextDocument.getInitialProps(ctx);\n\n      return {\n        ...initialProps,\n        styles: (\n          <>\n            {initialProps.styles}\n\n            {extractedStyles.map((content, index) => (\n              <style key={index} dangerouslySetInnerHTML={{ __html: content }} />\n            ))}\n          </>\n        ),\n      };\n    } finally {\n    }\n  }\n\n  render() {\n    return (\n      <html lang=\"en\">\n        <Head></Head>\n        <body>\n          <Main />\n          <NextScript />\n        </body>\n      </html>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { createStyled } from '@stitches/react';\nexport var theme = {\n  breakpoints: ['575px', '750px', '1000px', '1200px'],\n  colors: {\n    $black: 'rgb(19, 19, 21)',\n    $white: 'rgb(255, 255, 255)',\n    $gray: 'rgb(128, 128, 128)',\n    $blue: 'rgb(3, 136, 252)',\n    $red: 'rgb(249, 16, 74)',\n    $yellow: 'rgb(255, 221, 0)',\n    $pink: 'rgb(232, 141, 163)',\n    $turq: 'rgb(0, 245, 196)',\n    $orange: 'rgb(255, 135, 31)'\n  },\n  fonts: {\n    $sans: 'Inter,sans-serif',\n    $mono: 'Fira Mono,monospace'\n  },\n  fontSizes: {\n    $1: '12px',\n    $2: '14px',\n    $3: '16px',\n    $4: '20px',\n    $5: '24px',\n    $6: '32px',\n    $7: '48px',\n    $8: '64px',\n    $9: '72px'\n  },\n  lineHeights: {\n    $1: '18px',\n    $2: '21px',\n    $3: '24px',\n    $4: '30px',\n    $5: '36px',\n    $6: '48px',\n    $7: '72px',\n    $8: '96px',\n    $9: '108px'\n  },\n  space: {\n    $1: '4px',\n    $2: '8px',\n    $3: '16px',\n    $4: '32px',\n    $5: '64px',\n    $6: '128px',\n    $7: '256px',\n    $8: '512px'\n  },\n  sizes: {\n    $1: '4px',\n    $2: '8px',\n    $3: '16px',\n    $4: '32px',\n    $5: '64px',\n    $6: '128px',\n    $7: '256px',\n    $8: '512px'\n  },\n  radii: {\n    $1: '2px',\n    $2: '4px',\n    $3: '8px',\n    $round: '9999px'\n  }\n};\n\nvar _createStyled = createStyled({\n  tokens: theme,\n  breakpoints: {\n    \"default\": function _default(rule) {\n      return rule;\n    },\n    bp1: function bp1(rule) {\n      return \"@media (min-width: 520px) { \".concat(rule, \" }\");\n    },\n    bp2: function bp2(rule) {\n      return \"@media (min-width: 900px) { \".concat(rule, \" }\");\n    },\n    bp3: function bp3(rule) {\n      return \"@media (min-width: 1200px) { \".concat(rule, \" }\");\n    },\n    bp4: function bp4(rule) {\n      return \"@media (min-width: 1800px) { \".concat(rule, \" }\");\n    },\n    motion: function motion(rule) {\n      return \"@media (prefers-reduced-motion) { \".concat(rule, \" }\");\n    },\n    hover: function hover(rule) {\n      return \"@media (hover: hover) { \".concat(rule, \" }\");\n    },\n    dark: function dark(rule) {\n      return \"@media (prefers-color-scheme: dark) { \".concat(rule, \" }\");\n    },\n    light: function light(rule) {\n      return \"@media (prefers-color-scheme: light) { \".concat(rule, \" }\");\n    }\n  },\n  utils: {\n    p: function p(value) {\n      return {\n        paddingTop: value,\n        paddingBottom: value,\n        paddingLeft: value,\n        paddingRight: value\n      };\n    },\n    pt: function pt(value) {\n      return {\n        paddingTop: value\n      };\n    },\n    pr: function pr(value) {\n      return {\n        paddingRight: value\n      };\n    },\n    pb: function pb(value) {\n      return {\n        paddingBottom: value\n      };\n    },\n    pl: function pl(value) {\n      return {\n        paddingLeft: value\n      };\n    },\n    px: function px(value) {\n      return {\n        paddingLeft: value,\n        paddingRight: value\n      };\n    },\n    py: function py(value) {\n      return {\n        paddingTop: value,\n        paddingBottom: value\n      };\n    },\n    m: function m(value) {\n      return {\n        marginTop: value,\n        marginBottom: value,\n        marginLeft: value,\n        marginRight: value\n      };\n    },\n    mt: function mt(value) {\n      return {\n        marginTop: value\n      };\n    },\n    mr: function mr(value) {\n      return {\n        marginRight: value\n      };\n    },\n    mb: function mb(value) {\n      return {\n        marginBottom: value\n      };\n    },\n    ml: function ml(value) {\n      return {\n        marginLeft: value\n      };\n    },\n    mx: function mx(value) {\n      return {\n        marginLeft: value,\n        marginRight: value\n      };\n    },\n    my: function my(value) {\n      return {\n        marginTop: value,\n        marginBottom: value\n      };\n    },\n    ta: function ta(value) {\n      return {\n        textAlign: value\n      };\n    },\n    fd: function fd(value) {\n      return {\n        flexDirection: value\n      };\n    },\n    fw: function fw(value) {\n      return {\n        flexWrap: value\n      };\n    },\n    ai: function ai(value) {\n      return {\n        alignItems: value\n      };\n    },\n    ac: function ac(value) {\n      return {\n        alignContent: value\n      };\n    },\n    jc: function jc(value) {\n      return {\n        justifyContent: value\n      };\n    },\n    as: function as(value) {\n      return {\n        alignSelf: value\n      };\n    },\n    fg: function fg(value) {\n      return {\n        flexGrow: value\n      };\n    },\n    fs: function fs(value) {\n      return {\n        flexShrink: value\n      };\n    },\n    fb: function fb(value) {\n      return {\n        flexBasis: value\n      };\n    },\n    bc: function bc(value) {\n      return {\n        backgroundColor: value\n      };\n    },\n    size: function size(value) {\n      return {\n        width: value,\n        height: value\n      };\n    },\n    linearGradient: function linearGradient(value) {\n      return {\n        backgroundImage: \"linear-gradient(\".concat(value, \")\")\n      };\n    }\n  }\n}),\n    styled = _createStyled.styled,\n    css = _createStyled.css;\n\nexport { styled, css };","map":{"version":3,"sources":["/Users/pedroduarte/Projects/byrd/stitches.config.ts"],"names":["createStyled","theme","breakpoints","colors","$black","$white","$gray","$blue","$red","$yellow","$pink","$turq","$orange","fonts","$sans","$mono","fontSizes","$1","$2","$3","$4","$5","$6","$7","$8","$9","lineHeights","space","sizes","radii","$round","tokens","rule","bp1","bp2","bp3","bp4","motion","hover","dark","light","utils","p","value","paddingTop","paddingBottom","paddingLeft","paddingRight","pt","pr","pb","pl","px","py","m","marginTop","marginBottom","marginLeft","marginRight","mt","mr","mb","ml","mx","my","ta","textAlign","fd","flexDirection","fw","flexWrap","ai","alignItems","ac","alignContent","jc","justifyContent","as","alignSelf","fg","flexGrow","fs","flexShrink","fb","flexBasis","bc","backgroundColor","size","width","height","linearGradient","backgroundImage","styled","css"],"mappings":"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","sourcesContent":["import { createStyled } from '@stitches/react';\n\nexport const theme = {\n  breakpoints: ['575px', '750px', '1000px', '1200px'],\n  colors: {\n    $black: 'rgb(19, 19, 21)',\n    $white: 'rgb(255, 255, 255)',\n    $gray: 'rgb(128, 128, 128)',\n    $blue: 'rgb(3, 136, 252)',\n    $red: 'rgb(249, 16, 74)',\n    $yellow: 'rgb(255, 221, 0)',\n    $pink: 'rgb(232, 141, 163)',\n    $turq: 'rgb(0, 245, 196)',\n    $orange: 'rgb(255, 135, 31)',\n  },\n  fonts: {\n    $sans: 'Inter,sans-serif',\n    $mono: 'Fira Mono,monospace',\n  },\n  fontSizes: {\n    $1: '12px',\n    $2: '14px',\n    $3: '16px',\n    $4: '20px',\n    $5: '24px',\n    $6: '32px',\n    $7: '48px',\n    $8: '64px',\n    $9: '72px',\n  },\n  lineHeights: {\n    $1: '18px',\n    $2: '21px',\n    $3: '24px',\n    $4: '30px',\n    $5: '36px',\n    $6: '48px',\n    $7: '72px',\n    $8: '96px',\n    $9: '108px',\n  },\n  space: {\n    $1: '4px',\n    $2: '8px',\n    $3: '16px',\n    $4: '32px',\n    $5: '64px',\n    $6: '128px',\n    $7: '256px',\n    $8: '512px',\n  },\n  sizes: {\n    $1: '4px',\n    $2: '8px',\n    $3: '16px',\n    $4: '32px',\n    $5: '64px',\n    $6: '128px',\n    $7: '256px',\n    $8: '512px',\n  },\n  radii: {\n    $1: '2px',\n    $2: '4px',\n    $3: '8px',\n    $round: '9999px',\n  },\n};\n\nexport const { styled, css } = createStyled({\n  tokens: theme,\n  breakpoints: {\n    default: (rule) => rule,\n    bp1: (rule) => `@media (min-width: 520px) { ${rule} }`,\n    bp2: (rule) => `@media (min-width: 900px) { ${rule} }`,\n    bp3: (rule) => `@media (min-width: 1200px) { ${rule} }`,\n    bp4: (rule) => `@media (min-width: 1800px) { ${rule} }`,\n    motion: (rule) => `@media (prefers-reduced-motion) { ${rule} }`,\n    hover: (rule) => `@media (hover: hover) { ${rule} }`,\n    dark: (rule) => `@media (prefers-color-scheme: dark) { ${rule} }`,\n    light: (rule) => `@media (prefers-color-scheme: light) { ${rule} }`,\n  },\n  utils: {\n    p: (value: keyof typeof theme['space'] | (string & {})) => ({\n      paddingTop: value,\n      paddingBottom: value,\n      paddingLeft: value,\n      paddingRight: value,\n    }),\n    pt: (value: keyof typeof theme['space'] | (string & {})) => ({\n      paddingTop: value,\n    }),\n    pr: (value: keyof typeof theme['space'] | (string & {})) => ({\n      paddingRight: value,\n    }),\n    pb: (value: keyof typeof theme['space'] | (string & {})) => ({\n      paddingBottom: value,\n    }),\n    pl: (value: keyof typeof theme['space'] | (string & {})) => ({\n      paddingLeft: value,\n    }),\n    px: (value: keyof typeof theme['space'] | (string & {})) => ({\n      paddingLeft: value,\n      paddingRight: value,\n    }),\n    py: (value: keyof typeof theme['space'] | (string & {})) => ({\n      paddingTop: value,\n      paddingBottom: value,\n    }),\n    m: (value: keyof typeof theme['space'] | (string & {})) => ({\n      marginTop: value,\n      marginBottom: value,\n      marginLeft: value,\n      marginRight: value,\n    }),\n    mt: (value: keyof typeof theme['space'] | (string & {})) => ({\n      marginTop: value,\n    }),\n    mr: (value: keyof typeof theme['space'] | (string & {})) => ({\n      marginRight: value,\n    }),\n    mb: (value: keyof typeof theme['space'] | (string & {})) => ({\n      marginBottom: value,\n    }),\n    ml: (value: keyof typeof theme['space'] | (string & {})) => ({\n      marginLeft: value,\n    }),\n    mx: (value: keyof typeof theme['space'] | (string & {})) => ({\n      marginLeft: value,\n      marginRight: value,\n    }),\n    my: (value: keyof typeof theme['space'] | (string & {})) => ({\n      marginTop: value,\n      marginBottom: value,\n    }),\n\n    ta: (value) => ({ textAlign: value }),\n\n    fd: (value) => ({ flexDirection: value }),\n    fw: (value) => ({ flexWrap: value }),\n\n    ai: (value) => ({ alignItems: value }),\n    ac: (value) => ({ alignContent: value }),\n    jc: (value) => ({ justifyContent: value }),\n    as: (value) => ({ alignSelf: value }),\n    fg: (value) => ({ flexGrow: value }),\n    fs: (value) => ({ flexShrink: value }),\n    fb: (value) => ({ flexBasis: value }),\n\n    bc: (value: keyof typeof theme['colors'] | (string & {})) => ({\n      backgroundColor: value,\n    }),\n\n    size: (value: keyof typeof theme['sizes'] | (string & {})) => ({\n      width: value,\n      height: value,\n    }),\n\n    linearGradient: (value) => ({\n      backgroundImage: `linear-gradient(${value})`,\n    }),\n  },\n});\n"]},"metadata":{},"sourceType":"module"}
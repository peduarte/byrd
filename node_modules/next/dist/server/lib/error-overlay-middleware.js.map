{"version":3,"sources":["../../../server/lib/error-overlay-middleware.ts"],"names":["errorOverlayMiddleware","options","req","res","next","url","startsWith","query","parse","lineNumber","parseInt","colNumber","resolvedFileName","fileName","fs","existsSync","path","join","dir","end"],"mappings":"4EAAA,gDACA,sFACA,8CACA,kD,mFAGe,QAASA,CAAAA,sBAAT,CAAgCC,OAAhC,CAA0D,CACvE,MAAO,CAACC,GAAD,CAAuBC,GAAvB,CAA4CC,IAA5C,GAA+D,CACpE,GAAIF,GAAG,CAACG,GAAJ,CAASC,UAAT,CAAoB,+CAApB,CAAJ,CAA0E,CACxE,KAAMC,CAAAA,KAAK,CAAGF,aAAIG,KAAJ,CAAUN,GAAG,CAACG,GAAd,CAAoB,IAApB,EAA0BE,KAAxC,CACA,KAAME,CAAAA,UAAU,CAAGC,QAAQ,CAACH,KAAK,CAACE,UAAP,CAA6B,EAA7B,CAAR,EAA4C,CAA/D,CACA,KAAME,CAAAA,SAAS,CAAGD,QAAQ,CAACH,KAAK,CAACI,SAAP,CAA4B,EAA5B,CAAR,EAA2C,CAA7D,CAEA,GAAIC,CAAAA,gBAAgB,CAAGL,KAAK,CAACM,QAA7B,CAEA,GAAI,CAACC,YAAGC,UAAH,CAAcH,gBAAd,CAAL,CAAgD,CAC9CA,gBAAgB,CAAGI,cAAKC,IAAL,CAAUhB,OAAO,CAACiB,GAAlB,CAAuBN,gBAAvB,CAAnB,CACD,CAED,0BAAc,GAAEA,gBAAiB,IAAGH,UAAW,IAAGE,SAAU,EAA5D,EACAR,GAAG,CAACgB,GAAJ,GACD,CAbD,IAaO,CACLf,IAAI,GACL,CACF,CAjBD,CAkBD","sourcesContent":["import url from 'url'\nimport launchEditor from 'next/dist/compiled/launch-editor'\nimport fs from 'fs'\nimport path from 'path'\nimport { IncomingMessage, ServerResponse } from 'http'\n\nexport default function errorOverlayMiddleware(options: { dir: string }) {\n  return (req: IncomingMessage, res: ServerResponse, next: Function) => {\n    if (req.url!.startsWith('/_next/development/open-stack-frame-in-editor')) {\n      const query = url.parse(req.url!, true).query\n      const lineNumber = parseInt(query.lineNumber as string, 10) || 1\n      const colNumber = parseInt(query.colNumber as string, 10) || 1\n\n      let resolvedFileName = query.fileName\n\n      if (!fs.existsSync(resolvedFileName as string)) {\n        resolvedFileName = path.join(options.dir, resolvedFileName as string)\n      }\n\n      launchEditor(`${resolvedFileName}:${lineNumber}:${colNumber}`)\n      res.end()\n    } else {\n      next()\n    }\n  }\n}\n"]}
{"version":3,"sources":["../../server/static-paths-worker.ts"],"names":["workerWasUsed","loadStaticPaths","distDir","pathname","serverless","process","exit","components","getStaticPaths","Error"],"mappings":"6EAAA,qCACA,qEACA,qDAEA,GAAIA,CAAAA,aAAa,CAAG,KAApB,CAEA;AACA;AACA;AACO,cAAeC,CAAAA,eAAf,CACLC,OADK,CAELC,QAFK,CAGLC,UAHK,CAIL,CACA;AACA;AACA,GAAIJ,aAAJ,CAAmB,CACjBK,OAAO,CAACC,IAAR,CAAa,CAAb,EACD,CAED,KAAMC,CAAAA,UAAU,CAAG,KAAM,mCAAeL,OAAf,CAAwBC,QAAxB,CAAkCC,UAAlC,CAAzB,CAEA,GAAI,CAACG,UAAU,CAACC,cAAhB,CAAgC,CAC9B;AACA;AACA,KAAM,IAAIC,CAAAA,KAAJ,CACH,0DAAyDN,QAAS,EAD/D,CAAN,CAGD,CAEDH,aAAa,CAAG,IAAhB,CACA,MAAO,4BAAiBG,QAAjB,CAA2BI,UAAU,CAACC,cAAtC,CAAP,CACD","sourcesContent":["import { buildStaticPaths } from '../build/utils'\nimport { loadComponents } from '../next-server/server/load-components'\nimport '../next-server/server/node-polyfill-fetch'\n\nlet workerWasUsed = false\n\n// we call getStaticPaths in a separate process to ensure\n// side-effects aren't relied on in dev that will break\n// during a production build\nexport async function loadStaticPaths(\n  distDir: string,\n  pathname: string,\n  serverless: boolean\n) {\n  // we only want to use each worker once to prevent any invalid\n  // caches\n  if (workerWasUsed) {\n    process.exit(1)\n  }\n\n  const components = await loadComponents(distDir, pathname, serverless)\n\n  if (!components.getStaticPaths) {\n    // we shouldn't get to this point since the worker should\n    // only be called for SSG pages with getStaticPaths\n    throw new Error(\n      `Invariant: failed to load page with getStaticPaths for ${pathname}`\n    )\n  }\n\n  workerWasUsed = true\n  return buildStaticPaths(pathname, components.getStaticPaths)\n}\n"]}
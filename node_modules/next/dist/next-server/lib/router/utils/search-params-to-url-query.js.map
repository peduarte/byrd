{"version":3,"sources":["../../../../../next-server/lib/router/utils/search-params-to-url-query.ts"],"names":["searchParamsToUrlQuery","searchParams","query","forEach","value","key","Array","isArray","push"],"mappings":"2FAEO,QAASA,CAAAA,sBAAT,CACLC,YADK,CAEW,CAChB,KAAMC,CAAAA,KAAqB,CAAG,EAA9B,CACAD,YAAY,CAACE,OAAb,CAAqB,CAACC,KAAD,CAAQC,GAAR,GAAgB,CACnC,GAAI,MAAOH,CAAAA,KAAK,CAACG,GAAD,CAAZ,GAAsB,WAA1B,CAAuC,CACrCH,KAAK,CAACG,GAAD,CAAL,CAAaD,KAAb,CACD,CAFD,IAEO,IAAIE,KAAK,CAACC,OAAN,CAAcL,KAAK,CAACG,GAAD,CAAnB,CAAJ,CAA+B,CACpC,CAAEH,KAAK,CAACG,GAAD,CAAN,CAAyBG,IAAzB,CAA8BJ,KAA9B,EACF,CAFM,IAEA,CACLF,KAAK,CAACG,GAAD,CAAL,CAAa,CAACH,KAAK,CAACG,GAAD,CAAN,CAAuBD,KAAvB,CAAb,CACD,CACF,CARD,EASA,MAAOF,CAAAA,KAAP,CACD","sourcesContent":["import { ParsedUrlQuery } from 'querystring'\n\nexport function searchParamsToUrlQuery(\n  searchParams: URLSearchParams\n): ParsedUrlQuery {\n  const query: ParsedUrlQuery = {}\n  searchParams.forEach((value, key) => {\n    if (typeof query[key] === 'undefined') {\n      query[key] = value\n    } else if (Array.isArray(query[key])) {\n      ;(query[key] as string[]).push(value)\n    } else {\n      query[key] = [query[key] as string, value]\n    }\n  })\n  return query\n}\n"]}
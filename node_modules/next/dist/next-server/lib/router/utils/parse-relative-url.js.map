{"version":3,"sources":["../../../../../next-server/lib/router/utils/parse-relative-url.ts"],"names":["DUMMY_BASE","URL","parseRelativeUrl","url","base","resolvedBase","pathname","searchParams","search","hash","href","origin","Error","slice","length"],"mappings":"+EAAA,KAAMA,CAAAA,UAAU,CAAG,GAAIC,CAAAA,GAAJ,CAAQ,UAAR,CAAnB,CAEA;;;;GAKO,QAASC,CAAAA,gBAAT,CAA0BC,GAA1B,CAAuCC,IAAvC,CAAsD,CAC3D,KAAMC,CAAAA,YAAY,CAAGD,IAAI,CAAG,GAAIH,CAAAA,GAAJ,CAAQG,IAAR,CAAcJ,UAAd,CAAH,CAA+BA,UAAxD,CACA,KAAM,CAAEM,QAAF,CAAYC,YAAZ,CAA0BC,MAA1B,CAAkCC,IAAlC,CAAwCC,IAAxC,CAA8CC,MAA9C,EAAyD,GAAIV,CAAAA,GAAJ,CAC7DE,GAD6D,CAE7DE,YAF6D,CAA/D,CAIA,GAAIM,MAAM,GAAKX,UAAU,CAACW,MAA1B,CAAkC,CAChC,KAAM,IAAIC,CAAAA,KAAJ,CAAU,iCAAV,CAAN,CACD,CACD,MAAO,CACLN,QADK,CAELC,YAFK,CAGLC,MAHK,CAILC,IAJK,CAKLC,IAAI,CAAEA,IAAI,CAACG,KAAL,CAAWb,UAAU,CAACW,MAAX,CAAkBG,MAA7B,CALD,CAAP,CAOD","sourcesContent":["const DUMMY_BASE = new URL('http://n')\n\n/**\n * Parses path-relative urls (e.g. `/hello/world?foo=bar`). If url isn't path-relative\n * (e.g. `./hello`) then at least base must be.\n * Absolute urls are rejected.\n */\nexport function parseRelativeUrl(url: string, base?: string) {\n  const resolvedBase = base ? new URL(base, DUMMY_BASE) : DUMMY_BASE\n  const { pathname, searchParams, search, hash, href, origin } = new URL(\n    url,\n    resolvedBase\n  )\n  if (origin !== DUMMY_BASE.origin) {\n    throw new Error('invariant: invalid relative URL')\n  }\n  return {\n    pathname,\n    searchParams,\n    search,\n    hash,\n    href: href.slice(DUMMY_BASE.origin.length),\n  }\n}\n"]}
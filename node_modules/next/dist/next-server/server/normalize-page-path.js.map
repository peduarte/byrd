{"version":3,"sources":["../../../next-server/server/normalize-page-path.ts"],"names":["normalizePathSep","path","replace","normalizePagePath","page","test","startsWith","resolvedPage","posix","normalize","Error","denormalizePagePath","slice"],"mappings":"2KAAA,0BAEO,QAASA,CAAAA,gBAAT,CAA0BC,IAA1B,CAAgD,CACrD,MAAOA,CAAAA,IAAI,CAACC,OAAL,CAAa,KAAb,CAAoB,GAApB,CAAP,CACD,CAEM,QAASC,CAAAA,iBAAT,CAA2BC,IAA3B,CAAiD,CACtD;AACA,GAAIA,IAAI,GAAK,GAAb,CAAkB,CAChBA,IAAI,CAAG,QAAP,CACD,CAFD,IAEO,IAAI,iBAAiBC,IAAjB,CAAsBD,IAAtB,CAAJ,CAAiC,CACtCA,IAAI,CAAI,SAAQA,IAAK,EAArB,CACD,CACD;AACA,GAAI,CAACA,IAAI,CAACE,UAAL,CAAgB,GAAhB,CAAL,CAA2B,CACzBF,IAAI,CAAI,IAAGA,IAAK,EAAhB,CACD,CACD;AACA,KAAMG,CAAAA,YAAY,CAAGC,YAAMC,SAAN,CAAgBL,IAAhB,CAArB,CACA,GAAIA,IAAI,GAAKG,YAAb,CAA2B,CACzB,KAAM,IAAIG,CAAAA,KAAJ,CACH,yCAAwCN,IAAK,IAAGG,YAAa,EAD1D,CAAN,CAGD,CACD,MAAOH,CAAAA,IAAP,CACD,CAEM,QAASO,CAAAA,mBAAT,CAA6BP,IAA7B,CAA2C,CAChDA,IAAI,CAAGJ,gBAAgB,CAACI,IAAD,CAAvB,CACA,GAAIA,IAAI,CAACE,UAAL,CAAgB,SAAhB,CAAJ,CAAgC,CAC9BF,IAAI,CAAGA,IAAI,CAACQ,KAAL,CAAW,CAAX,CAAP,CACD,CAFD,IAEO,IAAIR,IAAI,GAAK,QAAb,CAAuB,CAC5BA,IAAI,CAAG,GAAP,CACD,CACD,MAAOA,CAAAA,IAAP,CACD","sourcesContent":["import { posix } from 'path'\n\nexport function normalizePathSep(path: string): string {\n  return path.replace(/\\\\/g, '/')\n}\n\nexport function normalizePagePath(page: string): string {\n  // If the page is `/` we need to append `/index`, otherwise the returned directory root will be bundles instead of pages\n  if (page === '/') {\n    page = '/index'\n  } else if (/^\\/index(\\/|$)/.test(page)) {\n    page = `/index${page}`\n  }\n  // Resolve on anything that doesn't start with `/`\n  if (!page.startsWith('/')) {\n    page = `/${page}`\n  }\n  // Throw when using ../ etc in the pathname\n  const resolvedPage = posix.normalize(page)\n  if (page !== resolvedPage) {\n    throw new Error(\n      `Requested and resolved page mismatch: ${page} ${resolvedPage}`\n    )\n  }\n  return page\n}\n\nexport function denormalizePagePath(page: string) {\n  page = normalizePathSep(page)\n  if (page.startsWith('/index/')) {\n    page = page.slice(6)\n  } else if (page === '/index') {\n    page = '/'\n  }\n  return page\n}\n"]}
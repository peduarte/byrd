{"version":3,"sources":["../../../next-server/server/serve-static.ts"],"names":["serveStatic","req","res","path","Promise","resolve","reject","on","err","Error","code","pipe"],"mappings":"qEACA,qE,mFAEO,QAASA,CAAAA,WAAT,CACLC,GADK,CAELC,GAFK,CAGLC,IAHK,CAIU,CACf,MAAO,IAAIC,CAAAA,OAAJ,CAAY,CAACC,OAAD,CAAUC,MAAV,GAAqB,CACtC,kBAAKL,GAAL,CAAUE,IAAV,EACGI,EADH,CACM,WADN,CACmB,IAAM,CACrB;AACA,KAAMC,CAAAA,GAAQ,CAAG,GAAIC,CAAAA,KAAJ,CAAU,qBAAV,CAAjB,CACAD,GAAG,CAACE,IAAJ,CAAW,QAAX,CACAJ,MAAM,CAACE,GAAD,CAAN,CACD,CANH,EAOGD,EAPH,CAOM,OAPN,CAOeD,MAPf,EAQGK,IARH,CAQQT,GARR,EASGK,EATH,CASM,QATN,CASgBF,OAThB,EAUD,CAXM,CAAP,CAYD","sourcesContent":["import { IncomingMessage, ServerResponse } from 'http'\nimport send from 'next/dist/compiled/send'\n\nexport function serveStatic(\n  req: IncomingMessage,\n  res: ServerResponse,\n  path: string\n): Promise<void> {\n  return new Promise((resolve, reject) => {\n    send(req, path)\n      .on('directory', () => {\n        // We don't allow directories to be read.\n        const err: any = new Error('No directory access')\n        err.code = 'ENOENT'\n        reject(err)\n      })\n      .on('error', reject)\n      .pipe(res)\n      .on('finish', resolve)\n  })\n}\n"]}
{"version":3,"sources":["../../../../build/webpack/plugins/build-manifest-plugin.ts"],"names":["generateClientManifest","assetMap","isModern","clientManifest","appDependencies","Set","pages","Object","entries","forEach","page","dependencies","filteredDeps","filter","dep","has","endsWith","length","isJsFile","file","BuildManifestPlugin","constructor","options","buildId","modern","apply","compiler","hooks","emit","tapAsync","compilation","callback","chunks","polyfillFiles","devFiles","ampDevFiles","lowPriorityFiles","ampFirstPages","ampFirstEntryNames","ampFirstEntryNamesMap","get","entryName","pagePath","push","mainJsChunk","find","c","name","CLIENT_STATIC_FILES_RUNTIME_MAIN","mainJsFiles","files","polyfillChunk","CLIENT_STATIC_FILES_RUNTIME_POLYFILLS","reactRefreshChunk","CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH","entrypoint","entrypoints","values","isAmpRuntime","CLIENT_STATIC_FILES_RUNTIME_AMP","getFiles","replace","filesForEntry","CLIENT_STATIC_FILES_PATH","srcEmptySsgManifest","ssgManifestPath","assets","RawSource","ssgManifestPathModern","keys","sort","reduce","a","BUILD_MANIFEST","JSON","stringify","clientManifestPath","modernClientManifestPath"],"mappings":"4DAAA,2EAEA,+CACA,6DASA,qHACA,wE,mFAEA;AACA;AACA,QAASA,CAAAA,sBAAT,CACEC,QADF,CAEEC,QAFF,CAGU,CACR,KAAMC,CAAAA,cAAyC,CAAG,EAAlD,CACA,KAAMC,CAAAA,eAAe,CAAG,GAAIC,CAAAA,GAAJ,CAAQJ,QAAQ,CAACK,KAAT,CAAe,OAAf,CAAR,CAAxB,CAEAC,MAAM,CAACC,OAAP,CAAeP,QAAQ,CAACK,KAAxB,EAA+BG,OAA/B,CAAuC,CAAC,CAACC,IAAD,CAAOC,YAAP,CAAD,GAA0B,CAC/D,GAAID,IAAI,GAAK,OAAb,CAAsB,OACtB;AACA;AACA,KAAME,CAAAA,YAAY,CAAGD,YAAY,CAACE,MAAb,CAClBC,GAAD,EACE,CAACV,eAAe,CAACW,GAAhB,CAAoBD,GAApB,CAAD,GACC,CAACA,GAAG,CAACE,QAAJ,CAAa,KAAb,CAAD,EAAwBF,GAAG,CAACE,QAAJ,CAAa,YAAb,IAA+Bd,QADxD,CAFiB,CAArB,CAMA;AACA,GAAIU,YAAY,CAACK,MAAjB,CAAyB,CACvBd,cAAc,CAACO,IAAD,CAAd,CAAuBE,YAAvB,CACD,CACF,CAdD,EAeA,MAAO,qBAAQT,cAAR,CAAP,CACD,CAED,QAASe,CAAAA,QAAT,CAAkBC,IAAlB,CAAyC,CACvC;AACA,MAAO,CAACA,IAAI,CAACH,QAAL,CAAc,gBAAd,CAAD,EAAoCG,IAAI,CAACH,QAAL,CAAc,KAAd,CAA3C,CACD,CAED;AACA;AACe,KAAMI,CAAAA,mBAAoB,CAIvCC,WAAW,CAACC,OAAD,CAAgD,MAHnDC,OAGmD,aAFnDC,MAEmD,QACzD,KAAKD,OAAL,CAAeD,OAAO,CAACC,OAAvB,CACA,KAAKC,MAAL,CAAcF,OAAO,CAACE,MAAtB,CACD,CAEDC,KAAK,CAACC,QAAD,CAAqB,CACxBA,QAAQ,CAACC,KAAT,CAAeC,IAAf,CAAoBC,QAApB,CACE,qBADF,CAEE,CAACC,WAAD,CAAmBC,QAAnB,GAAqC,uEACnC,KAAMC,CAAAA,MAA+B,CAAGF,WAAW,CAACE,MAApD,CACA,KAAM/B,CAAAA,QAAuB,CAAG,CAC9BgC,aAAa,CAAE,EADe,CAE9BC,QAAQ,CAAE,EAFoB,CAG9BC,WAAW,CAAE,EAHiB,CAI9BC,gBAAgB,CAAE,EAJY,CAK9B9B,KAAK,CAAE,CAAE,QAAS,EAAX,CALuB,CAM9B+B,aAAa,CAAE,EANe,CAAhC,CASA,KAAMC,CAAAA,kBAAkB,CAAGC,gDAAsBC,GAAtB,CAA0BV,WAA1B,CAA3B,CACA,GAAIQ,kBAAJ,CAAwB,CACtB,IAAK,KAAMG,CAAAA,SAAX,GAAwBH,CAAAA,kBAAxB,CAA4C,CAC1C,KAAMI,CAAAA,QAAQ,CAAG,oCAAuBD,SAAvB,CAAjB,CACA,GAAI,CAACC,QAAL,CAAe,CACb,SACD,CAEDzC,QAAQ,CAACoC,aAAT,CAAuBM,IAAvB,CAA4BD,QAA5B,EACD,CACF,CAED,KAAME,CAAAA,WAAW,CAAGZ,MAAM,CAACa,IAAP,CACjBC,CAAD,EAAOA,CAAC,CAACC,IAAF,GAAWC,2CADA,CAApB,CAIA,KAAMC,CAAAA,WAAqB,wBAAGL,WAAH,SAAGA,WAAH,iBAAGA,WAAW,CAAEM,KAAb,CAAmBrC,MAAnB,CAA0BK,QAA1B,CAAH,+DAA0C,EAArE,CAEA,KAAMiC,CAAAA,aAAa,CAAGnB,MAAM,CAACa,IAAP,CACnBC,CAAD,EAAOA,CAAC,CAACC,IAAF,GAAWK,gDADE,CAAtB,CAIA;AACAnD,QAAQ,CAACgC,aAAT,wBAAyBkB,aAAzB,SAAyBA,aAAzB,iBAAyBA,aAAa,CAAED,KAAf,CAAqBrC,MAArB,CAA4BK,QAA5B,CAAzB,+DAAkE,EAAlE,CAEA,KAAMmC,CAAAA,iBAAiB,CAAGrB,MAAM,CAACa,IAAP,CACvBC,CAAD,EAAOA,CAAC,CAACC,IAAF,GAAWO,oDADM,CAA1B,CAGArD,QAAQ,CAACiC,QAAT,wBAAoBmB,iBAApB,SAAoBA,iBAApB,iBAAoBA,iBAAiB,CAAEH,KAAnB,CAAyBrC,MAAzB,CAAgCK,QAAhC,CAApB,+DAAiE,EAAjE,CAEA,IAAK,KAAMqC,CAAAA,UAAX,GAAyBzB,CAAAA,WAAW,CAAC0B,WAAZ,CAAwBC,MAAxB,EAAzB,CAA2D,CACzD,KAAMC,CAAAA,YAAY,CAChBH,UAAU,CAACR,IAAX,GAAoBY,0CADtB,CAGA,GAAID,YAAJ,CAAkB,CAChB,IAAK,KAAMvC,CAAAA,IAAX,GAAmBoC,CAAAA,UAAU,CAACK,QAAX,EAAnB,CAA0C,CACxC,GAAI,EAAE1C,QAAQ,CAACC,IAAD,CAAR,EAAkBA,IAAI,CAACH,QAAL,CAAc,MAAd,CAApB,CAAJ,CAAgD,CAC9C,SACD,CAEDf,QAAQ,CAACkC,WAAT,CAAqBQ,IAArB,CAA0BxB,IAAI,CAAC0C,OAAL,CAAa,KAAb,CAAoB,GAApB,CAA1B,EACD,CACD,SACD,CACD,KAAMnB,CAAAA,QAAQ,CAAG,oCAAuBa,UAAU,CAACR,IAAlC,CAAjB,CAEA,GAAI,CAACL,QAAL,CAAe,CACb,SACD,CAED,KAAMoB,CAAAA,aAAuB,CAAG,EAAhC,CAEA;AACA,IAAK,KAAM3C,CAAAA,IAAX,GAAmBoC,CAAAA,UAAU,CAACK,QAAX,EAAnB,CAA0C,CACxC,GAAI,EAAE1C,QAAQ,CAACC,IAAD,CAAR,EAAkBA,IAAI,CAACH,QAAL,CAAc,MAAd,CAApB,CAAJ,CAAgD,CAC9C,SACD,CAED8C,aAAa,CAACnB,IAAd,CAAmBxB,IAAI,CAAC0C,OAAL,CAAa,KAAb,CAAoB,GAApB,CAAnB,EACD,CAED5D,QAAQ,CAACK,KAAT,CAAeoC,QAAf,EAA2B,CAAC,GAAGO,WAAJ,CAAiB,GAAGa,aAApB,CAA3B,CACD,CAED;AACA;AACA;AACA7D,QAAQ,CAACmC,gBAAT,CAA0BO,IAA1B,CACG,GAAEoB,mCAAyB,IAAG,KAAKxC,OAAQ,oBAD9C,EAGA,GAAI,KAAKC,MAAT,CAAiB,CACfvB,QAAQ,CAACmC,gBAAT,CAA0BO,IAA1B,CACG,GAAEoB,mCAAyB,IAAG,KAAKxC,OAAQ,2BAD9C,EAGD,CAED;AACA;AACA;AACA,KAAMyC,CAAAA,mBAAmB,CAAI,8EAA7B,CAEA,KAAMC,CAAAA,eAAe,CAAI,GAAEF,mCAAyB,IAAG,KAAKxC,OAAQ,kBAApE,CACAtB,QAAQ,CAACmC,gBAAT,CAA0BO,IAA1B,CAA+BsB,eAA/B,EACAnC,WAAW,CAACoC,MAAZ,CAAmBD,eAAnB,EAAsC,GAAIE,0BAAJ,CAAcH,mBAAd,CAAtC,CAEA,GAAI,KAAKxC,MAAT,CAAiB,CACf,KAAM4C,CAAAA,qBAAqB,CAAI,GAAEL,mCAAyB,IAAG,KAAKxC,OAAQ,yBAA1E,CACAtB,QAAQ,CAACmC,gBAAT,CAA0BO,IAA1B,CAA+ByB,qBAA/B,EACAtC,WAAW,CAACoC,MAAZ,CAAmBE,qBAAnB,EAA4C,GAAID,0BAAJ,CAC1CH,mBAD0C,CAA5C,CAGD,CAED/D,QAAQ,CAACK,KAAT,CAAiBC,MAAM,CAAC8D,IAAP,CAAYpE,QAAQ,CAACK,KAArB,EACdgE,IADc,EAEf;AAFe,CAGdC,MAHc,CAGP,CAACC,CAAD,CAAI1B,CAAJ,IAAY0B,CAAC,CAAC1B,CAAD,CAAD,CAAO7C,QAAQ,CAACK,KAAT,CAAewC,CAAf,CAAR,CAA4B0B,CAAvC,CAHO,CAGoC,EAHpC,CAAjB,CAKA1C,WAAW,CAACoC,MAAZ,CAAmBO,yBAAnB,EAAqC,GAAIN,0BAAJ,CACnCO,IAAI,CAACC,SAAL,CAAe1E,QAAf,CAAyB,IAAzB,CAA+B,CAA/B,CADmC,CAArC,CAIA,KAAM2E,CAAAA,kBAAkB,CAAI,GAAEb,mCAAyB,IAAG,KAAKxC,OAAQ,oBAAvE,CAEAO,WAAW,CAACoC,MAAZ,CAAmBU,kBAAnB,EAAyC,GAAIT,0BAAJ,CACtC,2BAA0BnE,sBAAsB,CAC/CC,QAD+C,CAE/C,KAF+C,CAG/C,yDAJqC,CAAzC,CAOA,GAAI,KAAKuB,MAAT,CAAiB,CACf,KAAMqD,CAAAA,wBAAwB,CAAI,GAAEd,mCAAyB,IAAG,KAAKxC,OAAQ,2BAA7E,CAEAO,WAAW,CAACoC,MAAZ,CAAmBW,wBAAnB,EAA+C,GAAIV,0BAAJ,CAC5C,2BAA0BnE,sBAAsB,CAC/CC,QAD+C,CAE/C,IAF+C,CAG/C,yDAJ2C,CAA/C,CAMD,CACD8B,QAAQ,GACT,CAvIH,EAyID,CAnJsC,C","sourcesContent":["import devalue from 'next/dist/compiled/devalue'\nimport { Compiler, compilation as CompilationType } from 'webpack'\nimport { RawSource } from 'webpack-sources'\nimport {\n  BUILD_MANIFEST,\n  CLIENT_STATIC_FILES_PATH,\n  CLIENT_STATIC_FILES_RUNTIME_MAIN,\n  CLIENT_STATIC_FILES_RUNTIME_POLYFILLS,\n  CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH,\n  CLIENT_STATIC_FILES_RUNTIME_AMP,\n} from '../../../next-server/lib/constants'\nimport { BuildManifest } from '../../../next-server/server/get-page-files'\nimport getRouteFromEntrypoint from '../../../next-server/server/get-route-from-entrypoint'\nimport { ampFirstEntryNamesMap } from './next-drop-client-page-plugin'\n\n// This function takes the asset map generated in BuildManifestPlugin and creates a\n// reduced version to send to the client.\nfunction generateClientManifest(\n  assetMap: BuildManifest,\n  isModern: boolean\n): string {\n  const clientManifest: { [s: string]: string[] } = {}\n  const appDependencies = new Set(assetMap.pages['/_app'])\n\n  Object.entries(assetMap.pages).forEach(([page, dependencies]) => {\n    if (page === '/_app') return\n    // Filter out dependencies in the _app entry, because those will have already\n    // been loaded by the client prior to a navigation event\n    const filteredDeps = dependencies.filter(\n      (dep) =>\n        !appDependencies.has(dep) &&\n        (!dep.endsWith('.js') || dep.endsWith('.module.js') === isModern)\n    )\n\n    // The manifest can omit the page if it has no requirements\n    if (filteredDeps.length) {\n      clientManifest[page] = filteredDeps\n    }\n  })\n  return devalue(clientManifest)\n}\n\nfunction isJsFile(file: string): boolean {\n  // We don't want to include `.hot-update.js` files into the initial page\n  return !file.endsWith('.hot-update.js') && file.endsWith('.js')\n}\n\n// This plugin creates a build-manifest.json for all assets that are being output\n// It has a mapping of \"entry\" filename to real filename. Because the real filename can be hashed in production\nexport default class BuildManifestPlugin {\n  private buildId: string\n  private modern: boolean\n\n  constructor(options: { buildId: string; modern: boolean }) {\n    this.buildId = options.buildId\n    this.modern = options.modern\n  }\n\n  apply(compiler: Compiler) {\n    compiler.hooks.emit.tapAsync(\n      'NextJsBuildManifest',\n      (compilation: any, callback: any) => {\n        const chunks: CompilationType.Chunk[] = compilation.chunks\n        const assetMap: BuildManifest = {\n          polyfillFiles: [],\n          devFiles: [],\n          ampDevFiles: [],\n          lowPriorityFiles: [],\n          pages: { '/_app': [] },\n          ampFirstPages: [],\n        }\n\n        const ampFirstEntryNames = ampFirstEntryNamesMap.get(compilation)\n        if (ampFirstEntryNames) {\n          for (const entryName of ampFirstEntryNames) {\n            const pagePath = getRouteFromEntrypoint(entryName)\n            if (!pagePath) {\n              continue\n            }\n\n            assetMap.ampFirstPages.push(pagePath)\n          }\n        }\n\n        const mainJsChunk = chunks.find(\n          (c) => c.name === CLIENT_STATIC_FILES_RUNTIME_MAIN\n        )\n\n        const mainJsFiles: string[] = mainJsChunk?.files.filter(isJsFile) ?? []\n\n        const polyfillChunk = chunks.find(\n          (c) => c.name === CLIENT_STATIC_FILES_RUNTIME_POLYFILLS\n        )\n\n        // Create a separate entry  for polyfills\n        assetMap.polyfillFiles = polyfillChunk?.files.filter(isJsFile) ?? []\n\n        const reactRefreshChunk = chunks.find(\n          (c) => c.name === CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH\n        )\n        assetMap.devFiles = reactRefreshChunk?.files.filter(isJsFile) ?? []\n\n        for (const entrypoint of compilation.entrypoints.values()) {\n          const isAmpRuntime =\n            entrypoint.name === CLIENT_STATIC_FILES_RUNTIME_AMP\n\n          if (isAmpRuntime) {\n            for (const file of entrypoint.getFiles()) {\n              if (!(isJsFile(file) || file.endsWith('.css'))) {\n                continue\n              }\n\n              assetMap.ampDevFiles.push(file.replace(/\\\\/g, '/'))\n            }\n            continue\n          }\n          const pagePath = getRouteFromEntrypoint(entrypoint.name)\n\n          if (!pagePath) {\n            continue\n          }\n\n          const filesForEntry: string[] = []\n\n          // getFiles() - helper function to read the files for an entrypoint from stats object\n          for (const file of entrypoint.getFiles()) {\n            if (!(isJsFile(file) || file.endsWith('.css'))) {\n              continue\n            }\n\n            filesForEntry.push(file.replace(/\\\\/g, '/'))\n          }\n\n          assetMap.pages[pagePath] = [...mainJsFiles, ...filesForEntry]\n        }\n\n        // Add the runtime build manifest file (generated later in this file)\n        // as a dependency for the app. If the flag is false, the file won't be\n        // downloaded by the client.\n        assetMap.lowPriorityFiles.push(\n          `${CLIENT_STATIC_FILES_PATH}/${this.buildId}/_buildManifest.js`\n        )\n        if (this.modern) {\n          assetMap.lowPriorityFiles.push(\n            `${CLIENT_STATIC_FILES_PATH}/${this.buildId}/_buildManifest.module.js`\n          )\n        }\n\n        // Add the runtime ssg manifest file as a lazy-loaded file dependency.\n        // We also stub this file out for development mode (when it is not\n        // generated).\n        const srcEmptySsgManifest = `self.__SSG_MANIFEST=new Set;self.__SSG_MANIFEST_CB&&self.__SSG_MANIFEST_CB()`\n\n        const ssgManifestPath = `${CLIENT_STATIC_FILES_PATH}/${this.buildId}/_ssgManifest.js`\n        assetMap.lowPriorityFiles.push(ssgManifestPath)\n        compilation.assets[ssgManifestPath] = new RawSource(srcEmptySsgManifest)\n\n        if (this.modern) {\n          const ssgManifestPathModern = `${CLIENT_STATIC_FILES_PATH}/${this.buildId}/_ssgManifest.module.js`\n          assetMap.lowPriorityFiles.push(ssgManifestPathModern)\n          compilation.assets[ssgManifestPathModern] = new RawSource(\n            srcEmptySsgManifest\n          )\n        }\n\n        assetMap.pages = Object.keys(assetMap.pages)\n          .sort()\n          // eslint-disable-next-line\n          .reduce((a, c) => ((a[c] = assetMap.pages[c]), a), {} as any)\n\n        compilation.assets[BUILD_MANIFEST] = new RawSource(\n          JSON.stringify(assetMap, null, 2)\n        )\n\n        const clientManifestPath = `${CLIENT_STATIC_FILES_PATH}/${this.buildId}/_buildManifest.js`\n\n        compilation.assets[clientManifestPath] = new RawSource(\n          `self.__BUILD_MANIFEST = ${generateClientManifest(\n            assetMap,\n            false\n          )};self.__BUILD_MANIFEST_CB && self.__BUILD_MANIFEST_CB()`\n        )\n\n        if (this.modern) {\n          const modernClientManifestPath = `${CLIENT_STATIC_FILES_PATH}/${this.buildId}/_buildManifest.module.js`\n\n          compilation.assets[modernClientManifestPath] = new RawSource(\n            `self.__BUILD_MANIFEST = ${generateClientManifest(\n              assetMap,\n              true\n            )};self.__BUILD_MANIFEST_CB && self.__BUILD_MANIFEST_CB()`\n          )\n        }\n        callback()\n      }\n    )\n  }\n}\n"]}
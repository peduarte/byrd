{"version":3,"sources":["../../../../build/webpack/plugins/serverless-plugin.ts"],"names":["isWebpack5","parseInt","webpack","version","GraphHelpers","undefined","require","ServerlessPlugin","apply","compiler","hooks","compilation","tap","hook","optimizeChunks","optimizeChunksBasic","chunks","chunk","hasEntryModule","dynamicChunks","getAllAsyncChunks","dynamicChunk","module","modulesIterable","addModule","connectChunkAndModule"],"mappings":"qEACA,wD,mFACA,KAAMA,CAAAA,UAAU,CAAGC,QAAQ,CAACC,iBAAQC,OAAT,CAAR,GAA+B,CAAlD,CAEA,KAAMC,CAAAA,YAAY,CAAGJ,UAAU,CAC3BK,SAD2B,CAE3BC,OAAO,CAAC,0BAAD,CAFX,CAIA;;;;GAMO,KAAMC,CAAAA,gBAAiB,CAC5BC,KAAK,CAACC,QAAD,CAAqB,CACxBA,QAAQ,CAACC,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CAA+B,kBAA/B,CAAoDD,WAAD,EAAiB,CAClE,KAAME,CAAAA,IAAI,CAAGb,UAAU,CACnBW,WAAW,CAACD,KAAZ,CAAkBI,cADC,CAEnBH,WAAW,CAACD,KAAZ,CAAkBK,mBAFtB,CAIAF,IAAI,CAACD,GAAL,CAAS,kBAAT,CAA8BI,MAAD,EAAY,CACvC,IAAK,KAAMC,CAAAA,KAAX,GAAoBD,CAAAA,MAApB,CAA4B,CAC1B;AACA,GAAI,CAACC,KAAK,CAACC,cAAN,EAAL,CAA6B,CAC3B,SACD,CAED;AACA,KAAMC,CAAAA,aAAa,CAAGF,KAAK,CAACG,iBAAN,EAAtB,CACA,IAAK,KAAMC,CAAAA,YAAX,GAA2BF,CAAAA,aAA3B,CAA0C,CACxC,IAAK,KAAMG,CAAAA,MAAX,GAAqBD,CAAAA,YAAY,CAACE,eAAlC,CAAmD,CACjD,GAAIvB,UAAJ,CAAgB,CACd;AACAiB,KAAK,CAACO,SAAN,CAAgBF,MAAhB,EACA,SACD,CAED;AACAlB,YAAY,CAACqB,qBAAb,CAAmCR,KAAnC,CAA0CK,MAA1C,EACD,CACF,CACF,CACF,CAtBD,EAuBD,CA5BD,EA6BD,CA/B2B,C","sourcesContent":["import { Compiler } from 'webpack'\nimport webpack from 'webpack'\nconst isWebpack5 = parseInt(webpack.version!) === 5\n\nconst GraphHelpers = isWebpack5\n  ? undefined\n  : require('webpack/lib/GraphHelpers')\n\n/**\n * Makes sure there are no dynamic chunks when the target is serverless\n * The dynamic chunks are integrated back into their parent chunk\n * This is to make sure there is a single render bundle instead of that bundle importing dynamic chunks\n */\n\nexport class ServerlessPlugin {\n  apply(compiler: Compiler) {\n    compiler.hooks.compilation.tap('ServerlessPlugin', (compilation) => {\n      const hook = isWebpack5\n        ? compilation.hooks.optimizeChunks\n        : compilation.hooks.optimizeChunksBasic\n\n      hook.tap('ServerlessPlugin', (chunks) => {\n        for (const chunk of chunks) {\n          // If chunk is not an entry point skip them\n          if (!chunk.hasEntryModule()) {\n            continue\n          }\n\n          // Async chunks are usages of import() for example\n          const dynamicChunks = chunk.getAllAsyncChunks()\n          for (const dynamicChunk of dynamicChunks) {\n            for (const module of dynamicChunk.modulesIterable) {\n              if (isWebpack5) {\n                // Add module back into the entry chunk\n                chunk.addModule(module)\n                continue\n              }\n\n              // Webpack 4 has separate GraphHelpers\n              GraphHelpers.connectChunkAndModule(chunk, module)\n            }\n          }\n        }\n      })\n    })\n  }\n}\n"]}
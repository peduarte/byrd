{"version":3,"sources":["../../../../build/webpack/plugins/pages-manifest-plugin.ts"],"names":["PagesManifestPlugin","constructor","serverless","apply","compiler","hooks","emit","tap","compilation","entrypoints","pages","entrypoint","values","pagePath","name","files","getFiles","filter","file","includes","endsWith","length","console","log","replace","assets","PAGES_MANIFEST","RawSource","JSON","stringify"],"mappings":"4DACA,+CACA,6DACA,qH,mFAIA;AACA;AACA;AACe,KAAMA,CAAAA,mBAAsC,CAGzDC,WAAW,CAACC,UAAD,CAAsB,MAFjCA,UAEiC,QAC/B,KAAKA,UAAL,CAAkBA,UAAlB,CACD,CAEDC,KAAK,CAACC,QAAD,CAA2B,CAC9BA,QAAQ,CAACC,KAAT,CAAeC,IAAf,CAAoBC,GAApB,CAAwB,qBAAxB,CAAgDC,WAAD,EAAiB,CAC9D,KAAMC,CAAAA,WAAW,CAAGD,WAAW,CAACC,WAAhC,CACA,KAAMC,CAAAA,KAAoB,CAAG,EAA7B,CAEA,IAAK,KAAMC,CAAAA,UAAX,GAAyBF,CAAAA,WAAW,CAACG,MAAZ,EAAzB,CAA+C,CAC7C,KAAMC,CAAAA,QAAQ,CAAG,oCACfF,UAAU,CAACG,IADI,CAEf,KAAKZ,UAFU,CAAjB,CAKA,GAAI,CAACW,QAAL,CAAe,CACb,SACD,CAED,KAAME,CAAAA,KAAK,CAAGJ,UAAU,CACrBK,QADW,GAEXC,MAFW,CAGTC,IAAD,EACE,CAACA,IAAI,CAACC,QAAL,CAAc,iBAAd,CAAD,EAAqCD,IAAI,CAACE,QAAL,CAAc,KAAd,CAJ7B,CAAd,CAOA,GAAIL,KAAK,CAACM,MAAN,CAAe,CAAnB,CAAsB,CACpBC,OAAO,CAACC,GAAR,CACG,iDAAgDZ,UAAU,CAACG,IAAK,EADnE,CAEEC,KAFF,EAIA,SACD,CAED;AACAL,KAAK,CAACG,QAAD,CAAL,CAAkBE,KAAK,CAAC,CAAD,CAAL,CAASS,OAAT,CAAiB,KAAjB,CAAwB,GAAxB,CAAlB,CACD,CAEDhB,WAAW,CAACiB,MAAZ,CAAmBC,yBAAnB,EAAqC,GAAIC,0BAAJ,CACnCC,IAAI,CAACC,SAAL,CAAenB,KAAf,CAAsB,IAAtB,CAA4B,CAA5B,CADmC,CAArC,CAGD,CApCD,EAqCD,CA7CwD,C","sourcesContent":["import { Compiler, Plugin } from 'webpack'\nimport { RawSource } from 'webpack-sources'\nimport { PAGES_MANIFEST } from '../../../next-server/lib/constants'\nimport getRouteFromEntrypoint from '../../../next-server/server/get-route-from-entrypoint'\n\nexport type PagesManifest = { [page: string]: string }\n\n// This plugin creates a pages-manifest.json from page entrypoints.\n// This is used for mapping paths like `/` to `.next/server/static/<buildid>/pages/index.js` when doing SSR\n// It's also used by next export to provide defaultPathMap\nexport default class PagesManifestPlugin implements Plugin {\n  serverless: boolean\n\n  constructor(serverless: boolean) {\n    this.serverless = serverless\n  }\n\n  apply(compiler: Compiler): void {\n    compiler.hooks.emit.tap('NextJsPagesManifest', (compilation) => {\n      const entrypoints = compilation.entrypoints\n      const pages: PagesManifest = {}\n\n      for (const entrypoint of entrypoints.values()) {\n        const pagePath = getRouteFromEntrypoint(\n          entrypoint.name,\n          this.serverless\n        )\n\n        if (!pagePath) {\n          continue\n        }\n\n        const files = entrypoint\n          .getFiles()\n          .filter(\n            (file: string) =>\n              !file.includes('webpack-runtime') && file.endsWith('.js')\n          )\n\n        if (files.length > 1) {\n          console.log(\n            `Found more than one file in server entrypoint ${entrypoint.name}`,\n            files\n          )\n          continue\n        }\n\n        // Write filename, replace any backslashes in path (on windows) with forwardslashes for cross-platform consistency.\n        pages[pagePath] = files[0].replace(/\\\\/g, '/')\n      }\n\n      compilation.assets[PAGES_MANIFEST] = new RawSource(\n        JSON.stringify(pages, null, 2)\n      )\n    })\n  }\n}\n"]}
"use strict";exports.__esModule=true;exports.default=void 0;var _webpackSources=require("webpack-sources");var _constants=require("../../../next-server/lib/constants");var _getRouteFromEntrypoint=_interopRequireDefault(require("../../../next-server/server/get-route-from-entrypoint"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}// This plugin creates a pages-manifest.json from page entrypoints.
// This is used for mapping paths like `/` to `.next/server/static/<buildid>/pages/index.js` when doing SSR
// It's also used by next export to provide defaultPathMap
class PagesManifestPlugin{constructor(serverless){this.serverless=void 0;this.serverless=serverless;}apply(compiler){compiler.hooks.emit.tap('NextJsPagesManifest',compilation=>{const entrypoints=compilation.entrypoints;const pages={};for(const entrypoint of entrypoints.values()){const pagePath=(0,_getRouteFromEntrypoint.default)(entrypoint.name,this.serverless);if(!pagePath){continue;}const files=entrypoint.getFiles().filter(file=>!file.includes('webpack-runtime')&&file.endsWith('.js'));if(files.length>1){console.log(`Found more than one file in server entrypoint ${entrypoint.name}`,files);continue;}// Write filename, replace any backslashes in path (on windows) with forwardslashes for cross-platform consistency.
pages[pagePath]=files[0].replace(/\\/g,'/');}compilation.assets[_constants.PAGES_MANIFEST]=new _webpackSources.RawSource(JSON.stringify(pages,null,2));});}}exports.default=PagesManifestPlugin;
//# sourceMappingURL=pages-manifest-plugin.js.map
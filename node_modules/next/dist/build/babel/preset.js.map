{"version":3,"sources":["../../../build/babel/preset.ts"],"names":["env","process","NODE_ENV","isProduction","isDevelopment","isTest","styledJsxOptions","options","Array","isArray","plugins","map","plugin","name","pluginOptions","require","resolve","supportsStaticESM","caller","module","exports","api","supportsESM","isServer","isModern","isLaxModern","targets","esmodules","presetEnvConfig","modules","exclude","node","customModernPreset","sourceType","presets","default","development","pragma","allowNamespaces","importAs","property","lib","useBuiltIns","corejs","helpers","regenerator","useESModules","absoluteRuntime","versions","pnp","__dirname","undefined","removeImport","filter","Boolean","overrides","test"],"mappings":"aACA,KAAMA,CAAAA,GAAG,CAAGC,OAAO,CAACD,GAAR,CAAYE,QAAxB,CACA,KAAMC,CAAAA,YAAY,CAAGH,GAAG,GAAK,YAA7B,CACA,KAAMI,CAAAA,aAAa,CAAGJ,GAAG,GAAK,aAA9B,CACA,KAAMK,CAAAA,MAAM,CAAGL,GAAG,GAAK,MAAvB,CAUA;AACA,QAASM,CAAAA,gBAAT,CAA0BC,OAA1B,CAA0D,CACxD,GAAI,CAACA,OAAL,CAAc,CACZ,MAAO,EAAP,CACD,CAED,GAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,OAAO,CAACG,OAAtB,CAAL,CAAqC,CACnC,MAAOH,CAAAA,OAAP,CACD,CAEDA,OAAO,CAACG,OAAR,CAAkBH,OAAO,CAACG,OAAR,CAAgBC,GAAhB,CACfC,MAAD,EAA8C,CAC5C,GAAIJ,KAAK,CAACC,OAAN,CAAcG,MAAd,CAAJ,CAA2B,CACzB,KAAM,CAACC,IAAD,CAAOC,aAAP,EAAwBF,MAA9B,CACA,MAAO,CAACG,OAAO,CAACC,OAAR,CAAgBH,IAAhB,CAAD,CAAwBC,aAAxB,CAAP,CACD,CAED,MAAOC,CAAAA,OAAO,CAACC,OAAR,CAAgBJ,MAAhB,CAAP,CACD,CARe,CAAlB,CAWA,MAAOL,CAAAA,OAAP,CACD,CAmBD;AACA,QAASU,CAAAA,iBAAT,CAA2BC,MAA3B,CAAiD,CAC/C,MAAO,CAAC,EAACA,MAAD,SAACA,MAAD,iBAACA,MAAM,CAAED,iBAAT,CAAR,CACD,CAEDE,MAAM,CAACC,OAAP,CAAiB,CACfC,GADe,CAEfd,OAA+B,CAAG,EAFnB,GAGC,wBAChB,KAAMe,CAAAA,WAAW,CAAGD,GAAG,CAACH,MAAJ,CAAWD,iBAAX,CAApB,CACA,KAAMM,CAAAA,QAAQ,CAAGF,GAAG,CAACH,MAAJ,CAAYA,MAAD,EAAiB,CAAC,CAACA,MAAF,EAAYA,MAAM,CAACK,QAA/C,CAAjB,CACA,KAAMC,CAAAA,QAAQ,CAAGH,GAAG,CAACH,MAAJ,CAAYA,MAAD,EAAiB,CAAC,CAACA,MAAF,EAAYA,MAAM,CAACM,QAA/C,CAAjB,CAEA,KAAMC,CAAAA,WAAW,CACfD,QAAQ,EACP,qBAAAjB,OAAO,CAAC,YAAD,CAAP,gEAAuBmB,OAAvB,GACCnB,OAAO,CAAC,YAAD,CAAP,CAAsBmB,OAAtB,CAA8BC,SAA9B,GAA4C,IAHhD,CAKA,KAAMC,CAAAA,eAAe,CAAG,CACtB;AACA;AACAC,OAAO,CAAE,MAHa,CAItBC,OAAO,CAAE,CAAC,yBAAD,CAJa,CAKtB,GAAGvB,OAAO,CAAC,YAAD,CALY,CAAxB,CAQA;AACA;AACA,GACE,CAACgB,QAAQ,EAAIlB,MAAb,IACC,CAACuB,eAAe,CAACF,OAAjB,EACC,EACE,MAAOE,CAAAA,eAAe,CAACF,OAAvB,GAAmC,QAAnC,EACA,QAAUE,CAAAA,eAAe,CAACF,OAF5B,CAFF,CADF,CAOE,CACAE,eAAe,CAACF,OAAhB,CAA0B,CACxB;AACA;AACAK,IAAI,CAAE,SAHkB,CAA1B,CAKD,CAED;AACA,KAAMC,CAAAA,kBAAkB,CACtBP,WAAW,EAAIlB,OAAO,CAAC,4BAAD,CADxB,CAGA,MAAO,CACL0B,UAAU,CAAE,aADP,CAELC,OAAO,CAAE,CACPF,kBAAkB,EAAI,CACpBjB,OAAO,CAAC,mBAAD,CAAP,CAA6BoB,OADT,CAEpBP,eAFoB,CADf,CAKP,CACEb,OAAO,CAAC,qBAAD,CADT,CAEE,CACE;AACA;AACAqB,WAAW,CAAEhC,aAAa,EAAIC,MAHhC,CAIEgC,MAAM,CAAE,OAJV,CAKE,GAAG9B,OAAO,CAAC,cAAD,CALZ,CAFF,CALO,CAeP,CACEQ,OAAO,CAAC,0BAAD,CADT,CAEE,CAAEuB,eAAe,CAAE,IAAnB,CAAyB,GAAG/B,OAAO,CAAC,mBAAD,CAAnC,CAFF,CAfO,CAFJ,CAsBLG,OAAO,CAAE,CACP,CACEK,OAAO,CAAC,sBAAD,CADT,CAEE,CACE;AACA;AACA;AACAI,MAAM,CAAE,OAJV,CAKEoB,QAAQ,CAAE,OALZ,CAMEF,MAAM,CAAE,OANV,CAOEG,QAAQ,CAAE,eAPZ,CAFF,CADO,CAaP,CACEzB,OAAO,CAAC,uCAAD,CADT,CAEE,CACE;AACA0B,GAAG,CAAE,IAFP,CAFF,CAbO,CAoBP1B,OAAO,CAAC,qCAAD,CApBA,CAqBPA,OAAO,CAAC,iCAAD,CArBA,CAsBP,CACEA,OAAO,CAAC,yCAAD,CADT,CAEER,OAAO,CAAC,kBAAD,CAAP,EAA+B,EAFjC,CAtBO,CA0BP,CACEQ,OAAO,CAAC,2CAAD,CADT,CAEE,CACE2B,WAAW,CAAE,IADf,CAFF,CA1BO,CAgCP,CAACnB,QAAD,EAAa,CACXR,OAAO,CAAC,iCAAD,CADI,CAEX,CACE4B,MAAM,CAAE,KADV,CAEEC,OAAO,CAAE,IAFX,CAGEC,WAAW,CAAE,IAHf,CAIEC,YAAY,CAAExB,WAAW,EAAIM,eAAe,CAACC,OAAhB,GAA4B,UAJ3D,CAKEkB,eAAe,CAAE9C,OAAO,CAAC+C,QAAR,CAAiBC,GAAjB,CAAuBC,SAAvB,CAAmCC,SALtD,CAME,GAAG5C,OAAO,CAAC,mBAAD,CANZ,CAFW,CAhCN,CA2CP,CACEF,MAAM,EAAIE,OAAO,CAAC,YAAD,CAAjB,EAAmCA,OAAO,CAAC,YAAD,CAAP,CAAsB,YAAtB,CAAnC,CACIQ,OAAO,CAAC,uBAAD,CADX,CAEIA,OAAO,CAAC,kBAAD,CAHb,CAIET,gBAAgB,CAACC,OAAO,CAAC,YAAD,CAAR,CAJlB,CA3CO,CAiDPQ,OAAO,CAAC,0BAAD,CAjDA,CAkDPZ,YAAY,EAAI,CACdY,OAAO,CAAC,gDAAD,CADO,CAEd,CACEqC,YAAY,CAAE,IADhB,CAFc,CAlDT,CAwDPrC,OAAO,CAAC,0CAAD,CAxDA,CAyDPA,OAAO,CAAC,oDAAD,CAzDA,CA0DPQ,QAAQ,EAAIR,OAAO,CAAC,6BAAD,CA1DZ,CA2DP,CAACA,OAAO,CAAC,0CAAD,CAAP,CAAoDoB,OAArD,CAA8D,KAA9D,CA3DO,EA4DPkB,MA5DO,CA4DAC,OA5DA,CAtBJ,CAmFLC,SAAS,CAAE,CACT,CACEC,IAAI,CAAE,SADR,CAEE9C,OAAO,CAAE,CAACK,OAAO,CAAC,0CAAD,CAAP,CAAoDoB,OAArD,CAFX,CADS,CAnFN,CAAP,CA0FD,CApID","sourcesContent":["import { PluginItem } from '@babel/core'\nconst env = process.env.NODE_ENV\nconst isProduction = env === 'production'\nconst isDevelopment = env === 'development'\nconst isTest = env === 'test'\n\ntype StyledJsxPlugin = [string, any] | string\ntype StyledJsxBabelOptions =\n  | {\n      plugins?: StyledJsxPlugin[]\n      'babel-test'?: boolean\n    }\n  | undefined\n\n// Resolve styled-jsx plugins\nfunction styledJsxOptions(options: StyledJsxBabelOptions) {\n  if (!options) {\n    return {}\n  }\n\n  if (!Array.isArray(options.plugins)) {\n    return options\n  }\n\n  options.plugins = options.plugins.map(\n    (plugin: StyledJsxPlugin): StyledJsxPlugin => {\n      if (Array.isArray(plugin)) {\n        const [name, pluginOptions] = plugin\n        return [require.resolve(name), pluginOptions]\n      }\n\n      return require.resolve(plugin)\n    }\n  )\n\n  return options\n}\n\ntype NextBabelPresetOptions = {\n  'preset-env'?: any\n  'preset-react'?: any\n  'class-properties'?: any\n  'transform-runtime'?: any\n  'experimental-modern-preset'?: PluginItem\n  'styled-jsx'?: StyledJsxBabelOptions\n  'preset-typescript'?: any\n}\n\ntype BabelPreset = {\n  presets?: PluginItem[] | null\n  plugins?: PluginItem[] | null\n  sourceType?: 'script' | 'module' | 'unambiguous'\n  overrides?: Array<{ test: RegExp } & Omit<BabelPreset, 'overrides'>>\n}\n\n// Taken from https://github.com/babel/babel/commit/d60c5e1736543a6eac4b549553e107a9ba967051#diff-b4beead8ad9195361b4537601cc22532R158\nfunction supportsStaticESM(caller: any): boolean {\n  return !!caller?.supportsStaticESM\n}\n\nmodule.exports = (\n  api: any,\n  options: NextBabelPresetOptions = {}\n): BabelPreset => {\n  const supportsESM = api.caller(supportsStaticESM)\n  const isServer = api.caller((caller: any) => !!caller && caller.isServer)\n  const isModern = api.caller((caller: any) => !!caller && caller.isModern)\n\n  const isLaxModern =\n    isModern ||\n    (options['preset-env']?.targets &&\n      options['preset-env'].targets.esmodules === true)\n\n  const presetEnvConfig = {\n    // In the test environment `modules` is often needed to be set to true, babel figures that out by itself using the `'auto'` option\n    // In production/development this option is set to `false` so that webpack can handle import/export with tree-shaking\n    modules: 'auto',\n    exclude: ['transform-typeof-symbol'],\n    ...options['preset-env'],\n  }\n\n  // When transpiling for the server or tests, target the current Node version\n  // if not explicitly specified:\n  if (\n    (isServer || isTest) &&\n    (!presetEnvConfig.targets ||\n      !(\n        typeof presetEnvConfig.targets === 'object' &&\n        'node' in presetEnvConfig.targets\n      ))\n  ) {\n    presetEnvConfig.targets = {\n      // Targets the current process' version of Node. This requires apps be\n      // built and deployed on the same version of Node.\n      node: 'current',\n    }\n  }\n\n  // specify a preset to use instead of @babel/preset-env\n  const customModernPreset =\n    isLaxModern && options['experimental-modern-preset']\n\n  return {\n    sourceType: 'unambiguous',\n    presets: [\n      customModernPreset || [\n        require('@babel/preset-env').default,\n        presetEnvConfig,\n      ],\n      [\n        require('@babel/preset-react'),\n        {\n          // This adds @babel/plugin-transform-react-jsx-source and\n          // @babel/plugin-transform-react-jsx-self automatically in development\n          development: isDevelopment || isTest,\n          pragma: '__jsx',\n          ...options['preset-react'],\n        },\n      ],\n      [\n        require('@babel/preset-typescript'),\n        { allowNamespaces: true, ...options['preset-typescript'] },\n      ],\n    ],\n    plugins: [\n      [\n        require('./plugins/jsx-pragma'),\n        {\n          // This produces the following injected import for modules containing JSX:\n          //   import React from 'react';\n          //   var __jsx = React.createElement;\n          module: 'react',\n          importAs: 'React',\n          pragma: '__jsx',\n          property: 'createElement',\n        },\n      ],\n      [\n        require('./plugins/optimize-hook-destructuring'),\n        {\n          // only optimize hook functions imported from React/Preact\n          lib: true,\n        },\n      ],\n      require('@babel/plugin-syntax-dynamic-import'),\n      require('./plugins/react-loadable-plugin'),\n      [\n        require('@babel/plugin-proposal-class-properties'),\n        options['class-properties'] || {},\n      ],\n      [\n        require('@babel/plugin-proposal-object-rest-spread'),\n        {\n          useBuiltIns: true,\n        },\n      ],\n      !isServer && [\n        require('@babel/plugin-transform-runtime'),\n        {\n          corejs: false,\n          helpers: true,\n          regenerator: true,\n          useESModules: supportsESM && presetEnvConfig.modules !== 'commonjs',\n          absoluteRuntime: process.versions.pnp ? __dirname : undefined,\n          ...options['transform-runtime'],\n        },\n      ],\n      [\n        isTest && options['styled-jsx'] && options['styled-jsx']['babel-test']\n          ? require('styled-jsx/babel-test')\n          : require('styled-jsx/babel'),\n        styledJsxOptions(options['styled-jsx']),\n      ],\n      require('./plugins/amp-attributes'),\n      isProduction && [\n        require('babel-plugin-transform-react-remove-prop-types'),\n        {\n          removeImport: true,\n        },\n      ],\n      require('@babel/plugin-proposal-optional-chaining'),\n      require('@babel/plugin-proposal-nullish-coalescing-operator'),\n      isServer && require('@babel/plugin-syntax-bigint'),\n      [require('@babel/plugin-proposal-numeric-separator').default, false],\n    ].filter(Boolean),\n    overrides: [\n      {\n        test: /\\.tsx?$/,\n        plugins: [require('@babel/plugin-proposal-numeric-separator').default],\n      },\n    ],\n  }\n}\n"]}